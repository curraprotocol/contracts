{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPLOYER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreateForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreateForwarderERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFlush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFlushERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040526000805460ff191660011790553480156200001e57600080fd5b506040516303223eab60e11b8152732172530fb58886b3466427bd60236e63ff8e4be56004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200008057600080fd5b505af115801562000095573d6000803e3d6000fd5b505050506000620000c2732172530fb58886b3466427bd60236e63ff8e4be56001620002df60201b60201c565b905080604051620000d3906200052e565b6001600160a01b039091168152602001604051809103906000f08015801562000100573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b039290921691821790556040516200012e906200053c565b6001600160a01b039091168152602001604051809103906000f0801580156200015b573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b03929092169182179055604051635c2d00a560e01b815260016004820152603560f81b6024820152635c2d00a590604401602060405180830381865afa158015620001c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e6919062000558565b6001600160a01b031660805260405162000200906200054a565b60408082526000908201819052606060208301819052820152608001604051809103906000f08015801562000239573d6000803e3d6000fd5b50601360006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620002bf57600080fd5b505af1158015620002d4573d6000803e3d6000fd5b50505050506200058a565b6000816000036200035257604051606b60f91b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152600160ff1b60368201526200034a906037015b604051602081830303815290604052805190602001206200052b60201b60201c565b905062000525565b607f8211620003a857604051606b60f91b6020820152602560fa1b60218201526001600160601b0319606085901b16602282015260f883901b6001600160f81b03191660368201526200034a9060370162000328565b60ff8211620004085760405160d760f81b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152608160f81b603682015260f883901b6001600160f81b03191660378201526200034a9060380162000328565b61ffff82116200046957604051601b60fb1b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152604160f91b60368201526001600160f01b031960f084901b1660378201526200034a9060390162000328565b62ffffff8211620004cb5760405160d960f81b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152608360f81b60368201526001600160e81b031960e884901b1660378201526200034a90603a0162000328565b604051606d60f91b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152602160fa1b60368201526001600160e01b031960e084901b1660378201526200052290603b0162000328565b90505b92915050565b90565b610692806200303d83390190565b612c3880620036cf83390190565b610cb0806200630783390190565b6000602082840312156200056b57600080fd5b81516001600160a01b03811681146200058357600080fd5b9392505050565b608051612a66620005d7600039600081816102d6015281816103aa0152818161049201528181610566015281816107a00152818161088c01528181610be70152610cd30152612a666000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c1b8411a1161005b578063c1b8411a146100ef578063c20fc9671461010a578063d26829b514610112578063fa7626d41461011a57600080fd5b80632c9260041461008d5780635f8e357d1461009757806381e167cf1461009f578063ba414fa6146100d7575b600080fd5b610095610127565b005b610095610485565b6100ba7394750381be1aba0504c666ee1db118f68f0780d481565b6040516001600160a01b0390911681526020015b60405180910390f35b6100df610644565b60405190151581526020016100ce565b6100ba732172530fb58886b3466427bd60236e63ff8e4be581565b610095610786565b610095610a2a565b6000546100df9060ff1681565b6040517f06447d560000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50506011546040517fee1fe2ad0000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152600060248201526001600160a01b03909116925063ee1fe2ad91506044016020604051808303816000875af1158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a9190612753565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102b957600080fd5b505af11580156102cd573d6000803e3d6000fd5b505050506102fd7f00000000000000000000000000000000000000000000000000000000000000006101a4610ddc565b6011546040517fdb4087d600000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526101a460448201527394750381be1aba0504c666ee1db118f68f0780d460648201526001600160a01b039091169063db4087d690608401600060405180830381600087803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b505050506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016311561041d5760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e730060448201526064015b60405180910390fd5b7394750381be1aba0504c666ee1db118f68f0780d4316101a4146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b565b61048d610127565b6104b97f00000000000000000000000000000000000000000000000000000000000000006101a4610ddc565b6011546040517fbdc6fa4a00000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526101a460448201527394750381be1aba0504c666ee1db118f68f0780d460648201526001600160a01b039091169063bdc6fa4a90608401600060405180830381600087803b15801561054457600080fd5b505af1158015610558573d6000803e3d6000fd5b505050506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001631156105d45760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b6105e16101a4600261279b565b7394750381be1aba0504c666ee1db118f68f0780d431146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b60008054610100900460ff16156106645750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610709917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016127e2565b60408051601f198184030181529082905261072391612806565b6000604051808303816000865af19150503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b509150508080602001905181019061077d9190612812565b9150505b919050565b61078e610a2a565b6013546107c7906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006101a4610e6d565b6011546013546040517f3acc3e1a00000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526001600160a01b0391821660448201526101a460648201527394750381be1aba0504c666ee1db118f68f0780d46084820152911690633acc3e1a9060a401600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b50506013546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015290911692506370a082319150602401602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190612753565b1561094f5760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b61095c6101a4600261279b565b6013546040516370a0823160e01b81527394750381be1aba0504c666ee1db118f68f0780d460048201526001600160a01b03909116906370a08231906024015b602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190612753565b146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b6040517f06447d560000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b50506011546040517fee1fe2ad0000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152600060248201526001600160a01b03909116925063ee1fe2ad91506044016020604051808303816000875af1158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190612753565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b5050601354610c0e92506001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006101a4610e6d565b6011546013546040517f8a47424500000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526001600160a01b0391821660448201526101a460648201527394750381be1aba0504c666ee1db118f68f0780d46084820152911690638a4742459060a401600060405180830381600087803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b50506013546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015290911692506370a082319150602401602060405180830381865afa158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190612753565b15610d965760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b6013546040516370a0823160e01b81527394750381be1aba0504c666ee1db118f68f0780d460048201526101a4916001600160a01b0316906370a082319060240161099c565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610e5157600080fd5b505af1158015610e65573d6000803e3d6000fd5b505050505050565b610e7a8383836000610e7f565b505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166370a0823160e01b1790529151600092871691610ee891612806565b6000604051808303816000865af19150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b50915050600081806020019051810190610f449190612753565b9050610f7684610f7087610f6a6370a0823160e01b610f6460038d6110c1565b90611103565b90611120565b90611148565b8215610e655760408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f18160ddd0000000000000000000000000000000000000000000000000000000017905290516000916001600160a01b03891691610fec9190612806565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150506000818060200190518101906110489190612753565b90508286101561106d5761105c868461283b565b611066908261283b565b9050611084565b611077838761283b565b611081908261284e565b90505b6110b781610f707f18160ddd00000000000000000000000000000000000000000000000000000000610f6460038d6110c1565b5050505050505050565b6005820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c1790556000826110fa565b6002820180546001810182556000918252602082206001600160a01b038416910155826110fa565b6111528282611156565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156111c757602002820191906000526020600020905b8154815260200190600101908083116111b3575b505050505090506000836111da836115a7565b6040516020016111eb9291906127e2565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161123d918691889101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16611275576112738761164e565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916112b4918791899101612861565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516112f99190612806565b600060405180830381855afa9150503d8060008114611334576040519150601f19603f3d011682016040523d82523d6000602084013e611339565b606091505b50915061135290508161134d88602061279b565b611659565b6040517f667f9d700000000000000000000000000000000000000000000000000000000081526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f59190612753565b90508082146114b85760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c401610414565b6040517f70ca10bb0000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801561153457600080fd5b505af1158015611548573d6000803e3d6000fd5b50505060058b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555060038a01805463ffffffff1916905561159360028b016000612719565b896004016000905550505050505050505050565b60606000825160206115b9919061279b565b67ffffffffffffffff8111156115d1576115d161289b565b6040519080825280601f01601f1916602001820160405280156115fb576020820181803683370190505b50905060005b835181101561164757600084828151811061161e5761161e6128ca565b60200260200101519050808260200260200184015250808061163f906128f9565b915050611601565b5092915050565b60006110fd826116ee565b6000806000602085511161166e578451611671565b60205b905060005b818110156116e45761168981600861279b565b86611694838861284e565b815181106116a4576116a46128ca565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806116dc816128f9565b915050611676565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561175e57602002820191906000526020600020905b81548152602001906001019080831161174a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506117a892508591879101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615611844576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291611814918591879101612861565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083611850836125ee565b6040516020016118619291906127e2565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156118d057600080fd5b505af11580156118e4573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516119039190612806565b600060405180830381855afa9150503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b50915061195c90508161195787602061279b565b61268e565b6040517f65bc94810000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af11580156119d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119fe91908101906129cc565b5090508051600103611db35760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708984600081518110611a5257611a526128ca565b60200260200101516040518363ffffffff1660e01b8152600401611a8b9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc9190612753565b905080611b33577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110611b0857611b086128ca565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b808314611bf45760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c401610414565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001611c2a929190612861565b6040516020818303038152906040528051906020012085600081518110611c5357611c536128ca565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a181600081518110611caa57611caa6128ca565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611cf3918a918c9101612861565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391611d5b918a918c9101612861565b60408051808303601f1901815291815281516020928301208352908201929092520160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550612453565b6001815111156123e35760005b81518110156123dd5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a858581518110611e1057611e106128ca565b60200260200101516040518363ffffffff1660e01b8152600401611e499291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015611e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8a9190612753565b905080611ef0577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611ec557611ec56128ca565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8a858581518110611f3557611f356128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201527f13370000000000000000000000000000000000000000000000000000000000006044820152606401600060405180830381600087803b158015611fac57600080fd5b505af1158015611fc0573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611fe09190612806565b600060405180830381855afa9150503d806000811461201b576040519150601f19603f3d011682016040523d82523d6000602084013e612020565b606091505b509092509050612035816119578b602061279b565b955081801561206357507f133700000000000000000000000000000000000000000000000000000000000086145b15612312577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200161209e929190612861565b604051602081830303815290604052805190602001208888815181106120c6576120c66128ca565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a184848151811061211c5761211c6128ca565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612165918d918f9101612861565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c60405160200161221a929190612861565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c87878151811061229a5761229a6128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156122f257600080fd5b505af1158015612306573d6000803e3d6000fd5b505050505050506123dd565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110612357576123576128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156123af57600080fd5b505af11580156123c3573d6000803e3d6000fd5b5050505050505080806123d5906128f9565b915050611dc0565b50612453565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610414565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916124959188918a9101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166125305760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e00000000000000000000000000000000006064820152608401610414565b6005890180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560038901805463ffffffff1916905561257760028a016000612719565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916125bb9188918a9101612861565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020612600919061279b565b67ffffffffffffffff8111156126185761261861289b565b6040519080825280601f01601f191660200182016040528015612642576020820181803683370190505b50905060005b8351811015611647576000848281518110612665576126656128ca565b602002602001015190508082602002602001840152508080612686906128f9565b915050612648565b600080600060208551116126a35784516126a6565b60205b905060005b818110156116e4576126be81600861279b565b866126c9838861284e565b815181106126d9576126d96128ca565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180612711816128f9565b9150506126ab565b5080546000825590600052602060002090810190612737919061273a565b50565b5b8082111561274f576000815560010161273b565b5090565b60006020828403121561276557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176110fd576110fd61276c565b6000815160005b818110156127d357602081850181015186830152016127b9565b50600093019283525090919050565b6001600160e01b03198316815260006127fe60048301846127b2565b949350505050565b60006110fa82846127b2565b60006020828403121561282457600080fd5b8151801515811461283457600080fd5b9392505050565b818103818111156110fd576110fd61276c565b808201808211156110fd576110fd61276c565b825160009082906020808701845b8381101561288b5781518552938201939082019060010161286f565b5050948252509092019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292a5761292a61276c565b5060010190565b600082601f83011261294257600080fd5b8151602067ffffffffffffffff8083111561295f5761295f61289b565b8260051b604051601f19603f830116810181811084821117156129845761298461289b565b6040529384528581018301938381019250878511156129a257600080fd5b83870191505b848210156129c1578151835291830191908301906129a8565b979650505050505050565b600080604083850312156129df57600080fd5b825167ffffffffffffffff808211156129f757600080fd5b612a0386838701612931565b93506020850151915080821115612a1957600080fd5b50612a2685828601612931565b915050925092905056fea264697066735822122035632edb825225519619821d9c80d6417307cae9025f7464092322b2f51bcaab64736f6c6343000811003360a060405234801561001057600080fd5b5060405161069238038061069283398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105ec6100a66000396000818160d301528181610156015281816101a8015281816101f801526102d101526105ec6000f3fe6080604052600436106100585760003560e01c8063aca8fc5911610040578063aca8fc59146100a1578063d6643a74146100c1578063fbd5f6b01461011e57005b80630e1b84f41461006157806396fd1c421461008157005b3661005f57005b005b34801561006d57600080fd5b5061005f61007c36600461050a565b61013e565b34801561008d57600080fd5b5061005f61009c366004610546565b610190565b3480156100ad57600080fd5b5061005f6100bc36600461050a565b6101e0565b3480156100cd57600080fd5b506100f57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561012a57600080fd5b5061005f610139366004610570565b6102b9565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018057600080fd5b61018b8382846103a8565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101d257600080fd5b6101dc828261046c565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461022257600080fd5b6040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8281166024830152604482018490528491908216906342842e0e90606401600060405180830381600087803b15801561029b57600080fd5b505af11580156102af573d6000803e3d6000fd5b5050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102fb57600080fd5b6040517ff242432a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8281166024830152604482018590526064820184905260a06084830152600060a483015285919082169063f242432a9060c401600060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050505050505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064015b60405180910390fd5b50505050565b600080600080600085875af190508061018b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161045d565b803573ffffffffffffffffffffffffffffffffffffffff8116811461050557600080fd5b919050565b60008060006060848603121561051f57600080fd5b610528846104e1565b92506020840135915061053d604085016104e1565b90509250925092565b6000806040838503121561055957600080fd5b610562836104e1565b946020939093013593505050565b6000806000806080858703121561058657600080fd5b61058f856104e1565b935060208501359250604085013591506105ab606086016104e1565b90509295919450925056fea26469706673582212203ca086a6ed713deca88f21bcdaf604f290d223d68af47dd9e5c9314ea3b0818264736f6c6343000811003360a06040523480156200001157600080fd5b5060405162002c3838038062002c388339810160408190526200003491620000bb565b6040518060400160405280601b81526020017f437572726120466f7277617264657273204f776e6572736869707300000000008152506040518060400160405280600381526020016243464f60e81b815250816000908162000097919062000192565b506001620000a6828262000192565b5050506001600160a01b03166080526200025e565b600060208284031215620000ce57600080fd5b81516001600160a01b0381168114620000e657600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011857607f821691505b6020821081036200013957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018d57600081815260208120601f850160051c81016020861015620001685750805b601f850160051c820191505b81811015620001895782815560010162000174565b5050505b505050565b81516001600160401b03811115620001ae57620001ae620000ed565b620001c681620001bf845462000103565b846200013f565b602080601f831160018114620001fe5760008415620001e55750858301515b600019600386901b1c1916600185901b17855562000189565b600085815260208120601f198616915b828110156200022f578886015182559484019460019091019084016200020e565b50858210156200024e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516129b062000288600039600081816103b70152818161087b01526111c901526129b06000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636352211e116100ee578063bdc6fa4a11610097578063db4087d611610071578063db4087d61461039f578063e38d60a1146103b2578063e985e9c5146103d9578063ee1fe2ad1461041557600080fd5b8063bdc6fa4a14610366578063c19260df14610379578063c87b56dd1461038c57600080fd5b806395d89b41116100c857806395d89b4114610338578063a22cb46514610340578063b88d4fde1461035357600080fd5b80636352211e146102f157806370a08231146103045780638a4742451461032557600080fd5b80633acc3e1a1161015b5780634d215ddd116101355780634d215ddd146102a557806357bc1a02146102b85780635ac40c91146102cb5780635c2d00a5146102de57600080fd5b80633acc3e1a1461025657806342842e0e14610269578063484620371461027c57600080fd5b8063081812fc1161018c578063081812fc14610205578063095ea7b31461023057806323b872dd1461024357600080fd5b806301ff2dca146101b357806301ffc9a7146101c857806306fdde03146101f0575b600080fd5b6101c66101c1366004611daf565b610428565b005b6101db6101d6366004611e3b565b61044d565b60405190151581526020015b60405180910390f35b6101f8610532565b6040516101e79190611ea8565b610218610213366004611ebb565b6105c4565b6040516001600160a01b0390911681526020016101e7565b6101c661023e366004611ed4565b6105eb565b6101c6610251366004611f00565b610721565b6101c6610264366004611f41565b6107a8565b6101c6610277366004611f00565b6107cb565b61021861028a366004611ebb565b6000908152600760205260409020546001600160a01b031690565b6101c66102b3366004611f97565b6107e6565b6101c66102c6366004611fc7565b610851565b6101c66102d9366004611fc7565b61086c565b6102186102ec36600461200f565b610874565b6102186102ff366004611ebb565b610930565b610317610312366004612031565b610995565b6040519081526020016101e7565b6101c6610333366004611f41565b610a2f565b6101f8610a3b565b6101c661034e36600461204e565b610a4a565b6101c66103613660046120b0565b610a59565b6101c6610374366004612190565b610ae7565b6101c6610387366004611daf565b610b08565b6101f861039a366004611ebb565b610b14565b6101c66103ad366004612190565b610b87565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101db6103e73660046121d1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6103176104233660046121d1565b610b9e565b60006104348786610874565b9050610444878783878787610c23565b50505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806104e057507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061052c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060008054610541906121ff565b80601f016020809104026020016040519081016040528092919081815260200182805461056d906121ff565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b5050505050905090565b60006105cf82610cd1565b506000908152600460205260409020546001600160a01b031690565b60006105f682610930565b9050806001600160a01b0316836001600160a01b0316036106845760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806106a057506106a081336103e7565b6107125760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161067b565b61071c8383610d38565b505050565b61072b3382610db3565b61079d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161067b565b61071c838383610e32565b60006107b48686610874565b90506107c38682868686611075565b505050505050565b61071c83838360405180602001604052806000815250610a59565b81336107f182610930565b6001600160a01b0316146108475760405162461bcd60e51b815260206004820152600b60248201527f546f6b656e206f776e6572000000000000000000000000000000000000000000604482015260640161067b565b61071c838361111a565b600061085d868561118d565b90506107c386868386866111ee565b600061085d86855b60006109297f000000000000000000000000000000000000000000000000000000000000000084846040516020016108b6929190918252602082015260400190565b604051602081830303815290604052805190602001203060405160388101919091526f5af43d82803e903d91602b57fd5bf3ff60248201526014810192909252733d602d80600a3d3981f3363d3d373d3d3d363d73825260588201526037600c8201206078820152605560439091012090565b9392505050565b6000818152600260205260408120546001600160a01b03168061052c5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161067b565b60006001600160a01b038216610a135760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161067b565b506001600160a01b031660009081526003602052604090205490565b60006107b4868661118d565b606060018054610541906121ff565b610a5533838361128f565b5050565b610a633383610db3565b610ad55760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161067b565b610ae18484848461137b565b50505050565b6000610af38585610874565b9050610b0185828585611404565b5050505050565b6000610434878661118d565b6060610b1f82610cd1565b6000610b3660408051602081019091526000815290565b90506000815111610b565760405180602001604052806000815250610929565b80610b6084611469565b604051602001610b71929190612252565b6040516020818303038152906040529392505050565b610b91848461118d565b50610ae184848484610ae7565b6000610bae600680546001019055565b6000610bb960065490565b9050610bc58482611509565b826001600160a01b038116610c115784604051610be190611d8d565b6001600160a01b039091168152602001604051809103906000f080158015610c0d573d6000803e3d6000fd5b5090505b610c1b828261111a565b509392505050565b600080610c348887878a88886116af565b6040517ffbd5f6b00000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018b9052604482018390528084166064830152929450909250879182169063fbd5f6b090608401600060405180830381600087803b158015610cae57600080fd5b505af1158015610cc2573d6000803e3d6000fd5b50505050505050505050505050565b6000818152600260205260409020546001600160a01b0316610d355760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161067b565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610d7a82610930565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610dbf83610930565b9050806001600160a01b0316846001600160a01b03161480610e0657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e2a5750836001600160a01b0316610e1f846105c4565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e4582610930565b6001600160a01b031614610ec15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161067b565b6001600160a01b038216610f3c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161067b565b610f498383836001611786565b826001600160a01b0316610f5c82610930565b6001600160a01b031614610fd85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161067b565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080611085878787878761180e565b6040517f0e1b84f40000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820183905280841660448301529294509092508791821690630e1b84f490606401600060405180830381600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050505050505050505050565b600082815260076020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527fe66dcdf7a5263efa3fa70fd568bdff5519a26957dd91e061604d4441f76c58a1910160405180910390a15050565b60008083836040516020016111ac929190918252602082015260400190565b604051602081830303815290604052805190602001209050610e2a7f0000000000000000000000000000000000000000000000000000000000000000826118dd565b60006111fd868585888661197a565b6040517faca8fc590000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018890528083166044830152919250859182169063aca8fc59906064015b600060405180830381600087803b15801561126e57600080fd5b505af1158015611282573d6000803e3d6000fd5b5050505050505050505050565b816001600160a01b0316836001600160a01b0316036112f05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161067b565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611386848484610e32565b61139284848484611a44565b610ae15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161067b565b60008061141386868686611be5565b6040517f96fd1c420000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526024820183905292945090925086918216906396fd1c4290604401611254565b6060600061147683611cab565b600101905060008167ffffffffffffffff81111561149657611496612081565b6040519080825280601f01601f1916602001820160405280156114c0576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846114ca57509392505050565b6001600160a01b03821661155f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161067b565b6000818152600260205260409020546001600160a01b0316156115c45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161067b565b6115d2600083836001611786565b6000818152600260205260409020546001600160a01b0316156116375760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161067b565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600086815260076020526040812054819081906001600160a01b03166040517fcb18d160000000000000000000000000000000000000000000000000000000008152600481018b90526001600160a01b038a811660248301528981166044830152606482018990526084820188905286811660a48301529192509082169063cb18d1609060c4016040805180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190612281565b9250925050965096945050505050565b6001811115610ae1576001600160a01b038416156117cc576001600160a01b038416600090815260036020526040812080548392906117c69084906122de565b90915550505b6001600160a01b03831615610ae1576001600160a01b038316600090815260036020526040812080548392906118039084906122f1565b909155505050505050565b600085815260076020526040812054819081906001600160a01b03166040517f58896063000000000000000000000000000000000000000000000000000000008152600481018a90526001600160a01b03898116602483015288811660448301526064820188905286811660848301529192509082169063588960639060a4016040805180830381865afa1580156118aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ce9190612281565b92509250509550959350505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b03811661052c5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640161067b565b60008581526007602052604081205481906001600160a01b03166040517ffe22a189000000000000000000000000000000000000000000000000000000008152600481018990526001600160a01b03888116602483015287811660448301526064820187905285811660848301529192509082169063fe22a1899060a401602060405180830381865afa158015611a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a399190612304565b979650505050505050565b60006001600160a01b0384163b15611bda576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a0290611aa1903390899088908890600401612321565b6020604051808303816000875af1925050508015611adc575060408051601f3d908101601f19168201909252611ad99181019061235d565b60015b611b8f573d808015611b0a576040519150601f19603f3d011682016040523d82523d6000602084013e611b0f565b606091505b508051600003611b875760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161067b565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610e2a565b506001949350505050565b600084815260076020526040812054819081906001600160a01b03166040517f9fe45c91000000000000000000000000000000000000000000000000000000008152600481018990526001600160a01b03888116602483015260448201889052868116606483015291925090821690639fe45c91906084016040805180830381865afa158015611c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9d9190612281565b925092505094509492505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611cf4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611d20576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611d3e57662386f26fc10000830492506010015b6305f5e1008310611d56576305f5e100830492506008015b6127108310611d6a57612710830492506004015b60648310611d7c576064830492506002015b600a831061052c5760010192915050565b6106008061237b83390190565b6001600160a01b0381168114610d3557600080fd5b60008060008060008060c08789031215611dc857600080fd5b8635955060208701359450604087013593506060870135611de881611d9a565b92506080870135915060a0870135611dff81611d9a565b809150509295509295509295565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610d3557600080fd5b600060208284031215611e4d57600080fd5b813561092981611e0d565b60005b83811015611e73578181015183820152602001611e5b565b50506000910152565b60008151808452611e94816020860160208601611e58565b601f01601f19169290920160200192915050565b6020815260006109296020830184611e7c565b600060208284031215611ecd57600080fd5b5035919050565b60008060408385031215611ee757600080fd5b8235611ef281611d9a565b946020939093013593505050565b600080600060608486031215611f1557600080fd5b8335611f2081611d9a565b92506020840135611f3081611d9a565b929592945050506040919091013590565b600080600080600060a08688031215611f5957600080fd5b85359450602086013593506040860135611f7281611d9a565b9250606086013591506080860135611f8981611d9a565b809150509295509295909350565b60008060408385031215611faa57600080fd5b823591506020830135611fbc81611d9a565b809150509250929050565b600080600080600060a08688031215611fdf57600080fd5b8535945060208601359350604086013592506060860135611fff81611d9a565b91506080860135611f8981611d9a565b6000806040838503121561202257600080fd5b50508035926020909101359150565b60006020828403121561204357600080fd5b813561092981611d9a565b6000806040838503121561206157600080fd5b823561206c81611d9a565b915060208301358015158114611fbc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156120c657600080fd5b84356120d181611d9a565b935060208501356120e181611d9a565b925060408501359150606085013567ffffffffffffffff8082111561210557600080fd5b818701915087601f83011261211957600080fd5b81358181111561212b5761212b612081565b604051601f8201601f19908116603f0116810190838211818310171561215357612153612081565b816040528281528a602084870101111561216c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600080608085870312156121a657600080fd5b84359350602085013592506040850135915060608501356121c681611d9a565b939692955090935050565b600080604083850312156121e457600080fd5b82356121ef81611d9a565b91506020830135611fbc81611d9a565b600181811c9082168061221357607f821691505b60208210810361224c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351612264818460208801611e58565b835190830190612278818360208801611e58565b01949350505050565b6000806040838503121561229457600080fd5b825161229f81611d9a565b6020939093015192949293505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561052c5761052c6122af565b8082018082111561052c5761052c6122af565b60006020828403121561231657600080fd5b815161092981611d9a565b60006001600160a01b038087168352808616602084015250836040830152608060608301526123536080830184611e7c565b9695505050505050565b60006020828403121561236f57600080fd5b815161092981611e0d56fe60a060405234801561001057600080fd5b5060405161060038038061060083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161053e6100c26000396000818160710152818161012f01528181610158015281816101ed01528181610216015281816102a1015281816102ca01528181610356015261037c015261053e6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639fe45c91116100505780639fe45c91146100e2578063cb18d160146100f5578063fe22a1891461010857600080fd5b80633d9287fa1461006c57806358896063146100b0575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c36100be36600461040c565b61011b565b604080516001600160a01b0390931683526020830191909152016100a7565b6100c36100f0366004610463565b6101d9565b6100c36101033660046104a9565b61028d565b61009361011636600461040c565b610343565b6000806001600160a01b03831661015657507f00000000000000000000000000000000000000000000000000000000000000009050826101cf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316146101c95760405162461bcd60e51b81526004016101c09060208082526004908201526311195cdd60e21b604082015260600190565b60405180910390fd5b50819050825b9550959350505050565b6000806001600160a01b03831661021457507f0000000000000000000000000000000000000000000000000000000000000000905082610284565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161461027e5760405162461bcd60e51b81526004016101c09060208082526004908201526311195cdd60e21b604082015260600190565b50819050825b94509492505050565b6000806001600160a01b0383166102c857507f0000000000000000000000000000000000000000000000000000000000000000905082610338565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316146103325760405162461bcd60e51b81526004016101c09060208082526004908201526311195cdd60e21b604082015260600190565b50819050825b965096945050505050565b60006001600160a01b03821661037a57507f00000000000000000000000000000000000000000000000000000000000000006103e7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146103e45760405162461bcd60e51b81526004016101c09060208082526004908201526311195cdd60e21b604082015260600190565b50805b95945050505050565b80356001600160a01b038116811461040757600080fd5b919050565b600080600080600060a0868803121561042457600080fd5b85359450610434602087016103f0565b9350610442604087016103f0565b925060608601359150610457608087016103f0565b90509295509295909350565b6000806000806080858703121561047957600080fd5b84359350610489602086016103f0565b92506040850135915061049e606086016103f0565b905092959194509250565b60008060008060008060c087890312156104c257600080fd5b863595506104d2602088016103f0565b94506104e0604088016103f0565b935060608701359250608087013591506104fc60a088016103f0565b9050929550929550929556fea264697066735822122068e857ad91faeb587d8392b9129117629788c0daf2f627b3854ecec430f1dca364736f6c63430008110033a26469706673582212200ca7061a33f540d6814e77e4bd4adb257d2f7d8994bb81c1876b483905f822d964736f6c6343000811003360806040523480156200001157600080fd5b5060405162000cb038038062000cb083398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109bc80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e391906107b6565b60405180910390f35b6100ff6100fa36600461083e565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610868565b610292565b604051601281526020016100e3565b6100ff61015136600461083e565b6102b6565b6101136101643660046108a4565b6001600160a01b031660009081526020819052604090205490565b6100d66102f5565b6100ff61019536600461083e565b610304565b6100ff6101a836600461083e565b6103b3565b6101136101bb3660046108c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906108f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906108f9565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103c1565b60019150505b92915050565b6000336102a0858285610519565b6102ab8585856105c9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102f090879061094c565b6103c1565b6060600480546101f5906108f9565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102ab82868684036103c1565b6000336102868185856105c9565b6001600160a01b03831661043c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039d565b6001600160a01b0382166104b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105c357818110156105b65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039d565b6105c384848484036103c1565b50505050565b6001600160a01b0383166106455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039d565b6001600160a01b0382166106c15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039d565b6001600160a01b038316600090815260208190526040902054818110156107505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105c3565b600060208083528351808285015260005b818110156107e3578581018301518582016040015282016107c7565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b80356001600160a01b038116811461083957600080fd5b919050565b6000806040838503121561085157600080fd5b61085a83610822565b946020939093013593505050565b60008060006060848603121561087d57600080fd5b61088684610822565b925061089460208501610822565b9150604084013590509250925092565b6000602082840312156108b657600080fd5b6108bf82610822565b9392505050565b600080604083850312156108d957600080fd5b6108e283610822565b91506108f060208401610822565b90509250929050565b600181811c9082168061090d57607f821691505b602082108103610946577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561028c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220885424e6688b47e86ec4982c15866e0d78d9894ff08a805766022904fa4d704064736f6c63430008110033",
    "sourceMap": "379:2833:50:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;832:387:50;;;;;;;;;-1:-1:-1;856:23:50;;-1:-1:-1;;;856:23:50;;513:42;856:23;;;160:51:51;856:13:50;;;;133:18:51;;856:23:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:22;915:33;513:42;946:1;915:20;;;:33;;:::i;:::-;890:58;;984:14;970:29;;;;;:::i;:::-;-1:-1:-1;;;;;178:32:51;;;160:51;;148:2;133:18;970:29:50;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;958:9:50;:41;;-1:-1:-1;;;;;;958:41:50;-1:-1:-1;;;;;958:41:50;;;;;;;;;1019:53;;;;;:::i;:::-;-1:-1:-1;;;;;178:32:51;;;160:51;;148:2;133:18;1019:53:50;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:7:50;:63;;-1:-1:-1;;;;;;1009:63:50;-1:-1:-1;;;;;1009:63:50;;;;;;;;;1101:50;;-1:-1:-1;;;1101:50:50;;-1:-1:-1;1101:50:50;;;396:25:51;-1:-1:-1;;;437:18:51;;;430:64;1101:31:50;;369:18:51;;1101:50:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1082:69:50;;;1170:17;;;;;:::i;:::-;1103:2:51;1085:21;;;1142:1;1122:18;;;1115:29;;;1182:2;1175:4;1160:20;;1153:32;;;1201:18;;1194:29;1255:3;1240:19;1170:17:50;;;;;;;;;;;;;;;;;;;;;;;1162:5;;:25;;;;;-1:-1:-1;;;;;1162:25:50;;;;;-1:-1:-1;;;;;1162:25:50;;;;;;284:28:1;276:37;;-1:-1:-1;;;;;1198:12:50;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:373;379:2833;;1951:1962:11;2045:7;2380:5;2389:4;2380:13;2376:134;;2440:68;;-1:-1:-1;;;2440:68:11;;;1509:28:51;-1:-1:-1;;;1553:11:51;;;1546:36;-1:-1:-1;;;;;;1644:2:51;1615:15;;;1611:45;1598:11;;;1591:66;-1:-1:-1;;;1673:12:51;;;1666:37;2407:103:11;;1719:12:51;;2440:68:11;;;;;;;;;;;;;2430:79;;;;;;2407:22;;;:103;;:::i;:::-;2400:110;;;;2376:134;2533:4;2524:5;:13;2520:134;;2584:68;;-1:-1:-1;;;2584:68:11;;;1979:28:51;-1:-1:-1;;;2023:11:51;;;2016:36;-1:-1:-1;;;;;;2114:2:51;2085:15;;;2081:45;2068:11;;;2061:66;1961:3;2161:16;;;-1:-1:-1;;;;;;2157:25:51;2143:12;;;2136:47;2551:103:11;;2199:12:51;;2584:68:11;1742:475:51;2520:134:11;2816:8;2807:5;:17;2803:148;;2867:82;;-1:-1:-1;;;2867:82:11;;;2485:28:51;-1:-1:-1;;;2529:11:51;;;2522:36;-1:-1:-1;;;;;;2620:2:51;2591:15;;;2587:45;2574:11;;;2567:66;-1:-1:-1;;;2649:12:51;;;2642:37;2467:3;2713:16;;;-1:-1:-1;;;;;;2709:25:51;2695:12;;;2688:47;2834:117:11;;2751:12:51;;2867:82:11;2222:547:51;2803:148:11;2974:9;2965:5;:18;2961:149;;3025:83;;-1:-1:-1;;;3025:83:11;;;3039:28:51;-1:-1:-1;;;3083:11:51;;;3076:36;-1:-1:-1;;;;;;3174:2:51;3145:15;;;3141:45;3128:11;;;3121:66;-1:-1:-1;;;3203:12:51;;;3196:37;-1:-1:-1;;;;;;3289:3:51;3267:16;;;3263:38;3249:12;;;3242:60;2992:118:11;;3318:12:51;;3025:83:11;2774:562:51;2961:149:11;3133:9;3124:5;:18;3120:149;;3184:83;;-1:-1:-1;;;3184:83:11;;;3606:28:51;-1:-1:-1;;;3650:11:51;;;3643:36;-1:-1:-1;;;;;;3741:2:51;3712:15;;;3708:45;3695:11;;;3688:66;-1:-1:-1;;;3770:12:51;;;3763:37;-1:-1:-1;;;;;;3856:3:51;3834:16;;;3830:41;3816:12;;;3809:63;3151:118:11;;3888:12:51;;3184:83:11;3341:565:51;3120:149:11;3812:83;;-1:-1:-1;;;3812:83:11;;;4176:28:51;-1:-1:-1;;;4220:11:51;;;4213:36;-1:-1:-1;;;;;;4311:2:51;4282:15;;;4278:45;4265:11;;;4258:66;-1:-1:-1;;;4340:12:51;;;4333:37;-1:-1:-1;;;;;;4426:3:51;4404:16;;;4400:43;4386:12;;;4379:65;3766:140:11;;4460:12:51;;3812:83:11;3911:567:51;3766:140:11;3759:147;;1951:1962;;;;;:::o;4470:144::-;4594:10;4470:144::o;379:2833:50:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;505:290:51:-;575:6;628:2;616:9;607:7;603:23;599:32;596:52;;;644:1;641;634:12;596:52;670:16;;-1:-1:-1;;;;;715:31:51;;705:42;;695:70;;761:1;758;751:12;695:70;784:5;505:290;-1:-1:-1;;;505:290:51:o;3911:567::-;379:2833:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063c1b8411a1161005b578063c1b8411a146100ef578063c20fc9671461010a578063d26829b514610112578063fa7626d41461011a57600080fd5b80632c9260041461008d5780635f8e357d1461009757806381e167cf1461009f578063ba414fa6146100d7575b600080fd5b610095610127565b005b610095610485565b6100ba7394750381be1aba0504c666ee1db118f68f0780d481565b6040516001600160a01b0390911681526020015b60405180910390f35b6100df610644565b60405190151581526020016100ce565b6100ba732172530fb58886b3466427bd60236e63ff8e4be581565b610095610786565b610095610a2a565b6000546100df9060ff1681565b6040517f06447d560000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50506011546040517fee1fe2ad0000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152600060248201526001600160a01b03909116925063ee1fe2ad91506044016020604051808303816000875af1158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a9190612753565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102b957600080fd5b505af11580156102cd573d6000803e3d6000fd5b505050506102fd7f00000000000000000000000000000000000000000000000000000000000000006101a4610ddc565b6011546040517fdb4087d600000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526101a460448201527394750381be1aba0504c666ee1db118f68f0780d460648201526001600160a01b039091169063db4087d690608401600060405180830381600087803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b505050506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016311561041d5760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e730060448201526064015b60405180910390fd5b7394750381be1aba0504c666ee1db118f68f0780d4316101a4146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b565b61048d610127565b6104b97f00000000000000000000000000000000000000000000000000000000000000006101a4610ddc565b6011546040517fbdc6fa4a00000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526101a460448201527394750381be1aba0504c666ee1db118f68f0780d460648201526001600160a01b039091169063bdc6fa4a90608401600060405180830381600087803b15801561054457600080fd5b505af1158015610558573d6000803e3d6000fd5b505050506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001631156105d45760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b6105e16101a4600261279b565b7394750381be1aba0504c666ee1db118f68f0780d431146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b60008054610100900460ff16156106645750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610709917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016127e2565b60408051601f198184030181529082905261072391612806565b6000604051808303816000865af19150503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b509150508080602001905181019061077d9190612812565b9150505b919050565b61078e610a2a565b6013546107c7906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006101a4610e6d565b6011546013546040517f3acc3e1a00000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526001600160a01b0391821660448201526101a460648201527394750381be1aba0504c666ee1db118f68f0780d46084820152911690633acc3e1a9060a401600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b50506013546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015290911692506370a082319150602401602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190612753565b1561094f5760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b61095c6101a4600261279b565b6013546040516370a0823160e01b81527394750381be1aba0504c666ee1db118f68f0780d460048201526001600160a01b03909116906370a08231906024015b602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190612753565b146104835760405162461bcd60e51b815260206004820152601760248201527f557365722073686f756c64206861766520746f6b656e730000000000000000006044820152606401610414565b6040517f06447d560000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b50506011546040517fee1fe2ad0000000000000000000000000000000000000000000000000000000081527394750381be1aba0504c666ee1db118f68f0780d46004820152600060248201526001600160a01b03909116925063ee1fe2ad91506044016020604051808303816000875af1158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190612753565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b5050601354610c0e92506001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006101a4610e6d565b6011546013546040517f8a47424500000000000000000000000000000000000000000000000000000000815260016004820152603560f81b60248201526001600160a01b0391821660448201526101a460648201527394750381be1aba0504c666ee1db118f68f0780d46084820152911690638a4742459060a401600060405180830381600087803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b50506013546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015290911692506370a082319150602401602060405180830381865afa158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190612753565b15610d965760405162461bcd60e51b815260206004820152601f60248201527f466f727761726465722073686f756c646e2774206861766520746f6b656e73006044820152606401610414565b6013546040516370a0823160e01b81527394750381be1aba0504c666ee1db118f68f0780d460048201526101a4916001600160a01b0316906370a082319060240161099c565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610e5157600080fd5b505af1158015610e65573d6000803e3d6000fd5b505050505050565b610e7a8383836000610e7f565b505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166370a0823160e01b1790529151600092871691610ee891612806565b6000604051808303816000865af19150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b50915050600081806020019051810190610f449190612753565b9050610f7684610f7087610f6a6370a0823160e01b610f6460038d6110c1565b90611103565b90611120565b90611148565b8215610e655760408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f18160ddd0000000000000000000000000000000000000000000000000000000017905290516000916001600160a01b03891691610fec9190612806565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150506000818060200190518101906110489190612753565b90508286101561106d5761105c868461283b565b611066908261283b565b9050611084565b611077838761283b565b611081908261284e565b90505b6110b781610f707f18160ddd00000000000000000000000000000000000000000000000000000000610f6460038d6110c1565b5050505050505050565b6005820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c1790556000826110fa565b6002820180546001810182556000918252602082206001600160a01b038416910155826110fa565b6111528282611156565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156111c757602002820191906000526020600020905b8154815260200190600101908083116111b3575b505050505090506000836111da836115a7565b6040516020016111eb9291906127e2565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161123d918691889101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16611275576112738761164e565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916112b4918791899101612861565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516112f99190612806565b600060405180830381855afa9150503d8060008114611334576040519150601f19603f3d011682016040523d82523d6000602084013e611339565b606091505b50915061135290508161134d88602061279b565b611659565b6040517f667f9d700000000000000000000000000000000000000000000000000000000081526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f59190612753565b90508082146114b85760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c401610414565b6040517f70ca10bb0000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801561153457600080fd5b505af1158015611548573d6000803e3d6000fd5b50505060058b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555060038a01805463ffffffff1916905561159360028b016000612719565b896004016000905550505050505050505050565b60606000825160206115b9919061279b565b67ffffffffffffffff8111156115d1576115d161289b565b6040519080825280601f01601f1916602001820160405280156115fb576020820181803683370190505b50905060005b835181101561164757600084828151811061161e5761161e6128ca565b60200260200101519050808260200260200184015250808061163f906128f9565b915050611601565b5092915050565b60006110fd826116ee565b6000806000602085511161166e578451611671565b60205b905060005b818110156116e45761168981600861279b565b86611694838861284e565b815181106116a4576116a46128ca565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806116dc816128f9565b915050611676565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561175e57602002820191906000526020600020905b81548152602001906001019080831161174a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506117a892508591879101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615611844576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291611814918591879101612861565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083611850836125ee565b6040516020016118619291906127e2565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156118d057600080fd5b505af11580156118e4573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516119039190612806565b600060405180830381855afa9150503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b50915061195c90508161195787602061279b565b61268e565b6040517f65bc94810000000000000000000000000000000000000000000000000000000081526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af11580156119d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119fe91908101906129cc565b5090508051600103611db35760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708984600081518110611a5257611a526128ca565b60200260200101516040518363ffffffff1660e01b8152600401611a8b9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc9190612753565b905080611b33577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110611b0857611b086128ca565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b808314611bf45760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201527f736e277420737570706f727465642e000000000000000000000000000000000060a482015260c401610414565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001611c2a929190612861565b6040516020818303038152906040528051906020012085600081518110611c5357611c536128ca565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a181600081518110611caa57611caa6128ca565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611cf3918a918c9101612861565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391611d5b918a918c9101612861565b60408051808303601f1901815291815281516020928301208352908201929092520160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550612453565b6001815111156123e35760005b81518110156123dd5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a858581518110611e1057611e106128ca565b60200260200101516040518363ffffffff1660e01b8152600401611e499291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015611e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8a9190612753565b905080611ef0577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611ec557611ec56128ca565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8a858581518110611f3557611f356128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201527f13370000000000000000000000000000000000000000000000000000000000006044820152606401600060405180830381600087803b158015611fac57600080fd5b505af1158015611fc0573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611fe09190612806565b600060405180830381855afa9150503d806000811461201b576040519150601f19603f3d011682016040523d82523d6000602084013e612020565b606091505b509092509050612035816119578b602061279b565b955081801561206357507f133700000000000000000000000000000000000000000000000000000000000086145b15612312577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200161209e929190612861565b604051602081830303815290604052805190602001208888815181106120c6576120c66128ca565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a184848151811061211c5761211c6128ca565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612165918d918f9101612861565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c60405160200161221a929190612861565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c87878151811061229a5761229a6128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156122f257600080fd5b505af1158015612306573d6000803e3d6000fd5b505050505050506123dd565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110612357576123576128ca565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156123af57600080fd5b505af11580156123c3573d6000803e3d6000fd5b5050505050505080806123d5906128f9565b915050611dc0565b50612453565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610414565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916124959188918a9101612861565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166125305760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e00000000000000000000000000000000006064820152608401610414565b6005890180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560038901805463ffffffff1916905561257760028a016000612719565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916125bb9188918a9101612861565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020612600919061279b565b67ffffffffffffffff8111156126185761261861289b565b6040519080825280601f01601f191660200182016040528015612642576020820181803683370190505b50905060005b8351811015611647576000848281518110612665576126656128ca565b602002602001015190508082602002602001840152508080612686906128f9565b915050612648565b600080600060208551116126a35784516126a6565b60205b905060005b818110156116e4576126be81600861279b565b866126c9838861284e565b815181106126d9576126d96128ca565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180612711816128f9565b9150506126ab565b5080546000825590600052602060002090810190612737919061273a565b50565b5b8082111561274f576000815560010161273b565b5090565b60006020828403121561276557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176110fd576110fd61276c565b6000815160005b818110156127d357602081850181015186830152016127b9565b50600093019283525090919050565b6001600160e01b03198316815260006127fe60048301846127b2565b949350505050565b60006110fa82846127b2565b60006020828403121561282457600080fd5b8151801515811461283457600080fd5b9392505050565b818103818111156110fd576110fd61276c565b808201808211156110fd576110fd61276c565b825160009082906020808701845b8381101561288b5781518552938201939082019060010161286f565b5050948252509092019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292a5761292a61276c565b5060010190565b600082601f83011261294257600080fd5b8151602067ffffffffffffffff8083111561295f5761295f61289b565b8260051b604051601f19603f830116810181811084821117156129845761298461289b565b6040529384528581018301938381019250878511156129a257600080fd5b83870191505b848210156129c1578151835291830191908301906129a8565b979650505050505050565b600080604083850312156129df57600080fd5b825167ffffffffffffffff808211156129f757600080fd5b612a0386838701612931565b93506020850151915080821115612a1957600080fd5b50612a2685828601612931565b915050925092905056fea264697066735822122035632edb825225519619821d9c80d6417307cae9025f7464092322b2f51bcaab64736f6c63430008110033",
    "sourceMap": "379:2833:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:468;;;:::i;:::-;;2775:435;;;:::i;561:73::-;;592:42;561:73;;;;;-1:-1:-1;;;;;178:55:51;;;160:74;;148:2;133:18;561:73:50;;;;;;;;1819:584:0;;;:::i;:::-;;;410:14:51;;403:22;385:41;;373:2;358:18;1819:584:0;245:187:51;478:77:50;;513:42;478:77;;1779:503;;;:::i;1238:535::-;;;:::i;1572:26:0:-;;;;;;;;;2301:468:50;2349:19;;;;;592:42;2349:19;;;160:74:51;2349:13:50;;;;133:18:51;;2349:19:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2379:7:50;;:30;;;;;592:42;2379:30;;;672:34:51;2379:7:50;722:18:51;;;715:43;-1:-1:-1;;;;;2379:7:50;;;;-1:-1:-1;2379:12:50;;-1:-1:-1;584:18:51;;2379:30:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;284:28:1;276:37;;-1:-1:-1;;;;;2420:12:50;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2498:43;2508:16;739:3;2498:4;:43::i;:::-;2552:7;;:57;;;;;:7;:57;;;1189:25:51;-1:-1:-1;;;1230:18:51;;;1223:107;739:3:50;1346:18:51;;;1339:34;592:42:50;1389:18:51;;;1382:83;-1:-1:-1;;;;;2552:7:50;;;;:23;;1161:19:51;;2552:57:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2628:16:50;:24;;:29;2620:73;;;;-1:-1:-1;;;2620:73:50;;1678:2:51;2620:73:50;;;1660:21:51;1717:2;1697:18;;;1690:30;1756:33;1736:18;;;1729:61;1807:18;;2620:73:50;;;;;;;;;592:42;2711:12;739:3;2711:23;2703:59;;;;-1:-1:-1;;;2703:59:50;;2038:2:51;2703:59:50;;;2020:21:51;2077:2;2057:18;;;2050:30;2116:25;2096:18;;;2089:53;2159:18;;2703:59:50;1836:347:51;2703:59:50;2301:468::o;2775:435::-;2856:21;:19;:21::i;:::-;2941:43;2951:16;739:3;2941:4;:43::i;:::-;2995:7;;:47;;;;;:7;:47;;;1189:25:51;-1:-1:-1;;;1230:18:51;;;1223:107;739:3:50;1346:18:51;;;1339:34;592:42:50;1389:18:51;;;1382:83;-1:-1:-1;;;;;2995:7:50;;;;:13;;1161:19:51;;2995:47:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3062:16:50;3061:26;;:31;3053:75;;;;-1:-1:-1;;;3053:75:50;;1678:2:51;3053:75:50;;;1660:21:51;1717:2;1697:18;;;1690:30;1756:33;1736:18;;;1729:61;1807:18;;3053:75:50;1476:355:51;3053:75:50;3164:11;739:3;3174:1;3164:11;:::i;:::-;592:42;3146:14;:29;3138:65;;;;-1:-1:-1;;;3138:65:50;;2038:2:51;3138:65:50;;;2020:21:51;2077:2;2057:18;;;2050:30;2116:25;2096:18;;;2089:53;2159:18;;3138:65:50;1836:347:51;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2724:74:51;;;2221:17:0;2814:18:51;;;2807:34;2196:43:0;;;;;;;;;2697:18:51;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1779:503:50:-;1865:26;:24;:26::i;:::-;1976:5;;1955:66;;-1:-1:-1;;;;;1976:5:50;1988:16;739:3;1955:4;:66::i;:::-;2032:7;;2078:5;;2032:68;;;;;:7;:68;;;4243:25:51;-1:-1:-1;;;4284:18:51;;;4277:107;-1:-1:-1;;;;;2078:5:50;;;4461:18:51;;;4454:43;739:3:50;4513:18:51;;;4506:34;592:42:50;4556:19:51;;;4549:44;2032:7:50;;;:18;;4215:19:51;;2032:68:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2119:5:50;;:33;;-1:-1:-1;;;2119:33:50;;-1:-1:-1;;;;;2135:16:50;178:55:51;;2119:33:50;;;160:74:51;2119:5:50;;;;-1:-1:-1;2119:15:50;;-1:-1:-1;133:18:51;;2119:33:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;2111:82;;;;-1:-1:-1;;;2111:82:50;;1678:2:51;2111:82:50;;;1660:21:51;1717:2;1697:18;;;1690:30;1756:33;1736:18;;;1729:61;1807:18;;2111:82:50;1476:355:51;2111:82:50;2236:11;739:3;2246:1;2236:11;:::i;:::-;2211:5;;:21;;-1:-1:-1;;;2211:21:50;;592:42;2211:21;;;160:74:51;-1:-1:-1;;;;;2211:5:50;;;;:15;;133:18:51;;2211:21:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;2203:72;;;;-1:-1:-1;;;2203:72:50;;2038:2:51;2203:72:50;;;2020:21:51;2077:2;2057:18;;;2050:30;2116:25;2096:18;;;2089:53;2159:18;;2203:72:50;1836:347:51;1238:535:50;1291:19;;;;;592:42;1291:19;;;160:74:51;1291:13:50;;;;133:18:51;;1291:19:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1321:7:50;;:30;;;;;592:42;1321:30;;;672:34:51;1321:7:50;722:18:51;;;715:43;-1:-1:-1;;;;;1321:7:50;;;;-1:-1:-1;1321:12:50;;-1:-1:-1;584:18:51;;1321:30:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;284:28:1;276:37;;-1:-1:-1;;;;;1362:12:50;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1461:5:50;;1440:66;;-1:-1:-1;;;;;;1461:5:50;;-1:-1:-1;1473:16:50;739:3;1440:4;:66::i;:::-;1517:7;;1573:5;;1517:78;;;;;:7;:78;;;4243:25:51;-1:-1:-1;;;4284:18:51;;;4277:107;-1:-1:-1;;;;;1573:5:50;;;4461:18:51;;;4454:43;739:3:50;4513:18:51;;;4506:34;592:42:50;4556:19:51;;;4549:44;1517:7:50;;;:28;;4215:19:51;;1517:78:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1614:5:50;;:33;;-1:-1:-1;;;1614:33:50;;-1:-1:-1;;;;;1630:16:50;178:55:51;;1614:33:50;;;160:74:51;1614:5:50;;;;-1:-1:-1;1614:15:50;;-1:-1:-1;133:18:51;;1614:33:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;1606:82;;;;-1:-1:-1;;;1606:82:50;;1678:2:51;1606:82:50;;;1660:21:51;1717:2;1697:18;;;1690:30;1756:33;1736:18;;;1729:61;1807:18;;1606:82:50;1476:355:51;1606:82:50;1706:5;;:21;;-1:-1:-1;;;1706:21:50;;592:42;1706:21;;;160:74:51;739:3:50;;-1:-1:-1;;;;;1706:5:50;;:15;;133:18:51;;1706:21:50;14:226:51;17929:91:6;17996:17;;;;;-1:-1:-1;;;;;2742:55:51;;17996:17:6;;;2724:74:51;2814:18;;;2807:34;;;17996:7:6;;;;2697:18:51;;17996:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17929:91;;:::o;18144:117::-;18226:28;18231:5;18238:2;18242:4;18248:5;18226:4;:28::i;:::-;18144:117;;;:::o;18267:825::-;18431:38;;;-1:-1:-1;;;;;178:55:51;;;18431:38:6;;;;160:74:51;;;;18431:38:6;;;;;;;;;;133:18:51;;;;18431:38:6;;;;;;;;;-1:-1:-1;;;18431:38:6;;;18420:50;;18396:20;;18420:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18393:77;;;18480:15;18509:7;18498:30;;;;;;;;;;;;:::i;:::-;18480:48;-1:-1:-1;18565:71:6;18631:4;18565:51;18613:2;18565:38;-1:-1:-1;;;18565:22:6;:8;18581:5;18565:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;18682:6;18678:408;;;18745:34;;;;;;;;;;;;;;;;;;;;;;18734:46;;18707:23;;-1:-1:-1;;;;;18734:10:6;;;:46;;18745:34;18734:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18704:76;;;18794:14;18822:10;18811:33;;;;;;;;;;;;:::i;:::-;18794:50;;18869:7;18862:4;:14;18858:144;;;18907:14;18917:4;18907:7;:14;:::i;:::-;18896:26;;;;:::i;:::-;;;18858:144;;;18972:14;18979:7;18972:4;:14;:::i;:::-;18961:26;;;;:::i;:::-;;;18858:144;19015:60;19068:6;19015:38;;:22;:8;19031:5;19015:15;:22::i;:60::-;18690:396;;18352:740;;18267:825;;;;:::o;7698:156:10:-;4571:12;;;:22;;;;-1:-1:-1;;;;;4571:22:10;;;;;-1:-1:-1;4571:12:10;7811:36;7804:43;;7698:156;;;;;:::o;7860:143::-;4726:9;;;:16;;-1:-1:-1;;4726:16:10;;;;;;;;-1:-1:-1;4726:9:10;7966:30;4627:143;8165:152;5042:10;;;:47;;;;;;;8239:18;5042:47;;;;;;-1:-1:-1;;;;;5066:21:10;;5042:47;;;8300:4;8276:34;4938:179;8941:120;9021:33;9035:4;9049:3;9021:13;:33::i;:::-;8941:120;;:::o;9295:1095::-;9389:12;;;;9425:9;;;;9466:11;;;;9510:10;;;9487:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9389:12:10;;;;9425:9;;;;;;9375:11;;9487:33;;9510:10;;9487:33;;9510:10;9487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9531:17;9568:4;9574:12;9582:3;9574:7;:12::i;:::-;9551:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9551:36:10;;;;;;;;;-1:-1:-1;;;;;9602:15:10;;;;;;:10;;;9551:36;9602:15;;;;;;-1:-1:-1;;;;;;9602:21:10;;;;;;;;;9551:36;;-1:-1:-1;9602:21:10;;:15;;9634:34;;9651:3;;9656:11;;9634:34;;:::i;:::-;;;;-1:-1:-1;;9634:34:10;;;;;;;;;9624:45;;9634:34;9624:45;;;;9602:68;;;;;;;;;;-1:-1:-1;9602:68:10;;;;9597:110;;9686:10;9691:4;9686;:10::i;:::-;;9597:110;-1:-1:-1;;;;;9739:15:10;;9716:12;9739:15;;;;;;;;;;;-1:-1:-1;;;;;;9739:21:10;;;;;;;;;9771:34;;9739:21;;9716:12;;9771:34;;9788:3;;9793:11;;9771:34;;:::i;:::-;;;;;;;;;;;;;9761:45;;;;;;9739:68;;;;;;;;;;;;9731:77;;9716:92;;9819:12;9858:17;9879:3;-1:-1:-1;;;;;9879:14:10;9894:4;9879:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9855:44:10;-1:-1:-1;9920:38:10;;-1:-1:-1;9855:44:10;9941:16;9946:11;9941:2;:16;:::i;:::-;9920:14;:38::i;:::-;9993:18;;;;;-1:-1:-1;;;;;2742:55:51;;9993:18:10;;;2724:74:51;2814:18;;;2807:34;;;9913:45:10;;-1:-1:-1;9978:12:10;;-1:-1:-1;9993:7:10;;;;2697:18:51;;9993::10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9978:33;;10034:4;10026;:12;10022:218;;10054:175;;-1:-1:-1;;;10054:175:10;;6175:2:51;10054:175:10;;;6157:21:51;6214:3;6194:18;;;6187:31;6254:34;6234:18;;;6227:62;6325:34;6305:18;;;6298:62;6397:34;6376:19;;;6369:63;6469:17;6448:19;;;6441:46;6504:19;;10054:175:10;5973:556:51;10054:175:10;10249:24;;;;;-1:-1:-1;;;;;6754:55:51;;10249:24:10;;;6736:74:51;6826:18;;;6819:34;;;6869:18;;;6862:34;;;10249:8:10;;;;6709:18:51;;10249:24:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10290:12:10;;;10283:19;;;;;;-1:-1:-1;10319:9:10;;;10312:16;;-1:-1:-1;;10312:16:10;;;10338:17;-1:-1:-1;10345:10:10;;10290:12;10338:17;:::i;:::-;10372:4;:11;;10365:18;;;9365:1025;;;;;;;;9295:1095;;:::o;11469:393::-;11528:12;11552:19;11584:1;:8;11595:2;11584:13;;;;:::i;:::-;11574:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11574:24:10;;11552:46;;11613:9;11608:224;11632:1;:8;11628:1;:12;11608:224;;;11661:9;11673:1;11675;11673:4;;;;;;;;:::i;:::-;;;;;;;11661:16;;11806:1;11800;11796:2;11792:10;11788:2;11784:19;11776:6;11772:32;11765:43;11747:75;11642:3;;;;;:::i;:::-;;;;11608:224;;;-1:-1:-1;11849:6:10;11469:393;-1:-1:-1;;11469:393:10:o;7577:115::-;7634:7;7660:25;7680:4;7660:19;:25::i;11108:304::-;11186:7;11205:11;11227;11252:2;11241:1;:8;:13;:29;;11262:1;:8;11241:29;;;11257:2;11241:29;11227:43;;11285:9;11280:106;11304:3;11300:1;:7;11280:106;;;11369:5;:1;11373;11369:5;:::i;:::-;11343:1;11345:10;11354:1;11345:6;:10;:::i;:::-;11343:13;;;;;;;;:::i;:::-;;;;;;;11335:40;;11328:47;;;;;11309:3;;;;:::i;:::-;;;;11280:106;;;-1:-1:-1;11402:3:10;;11108:304;-1:-1:-1;;;;11108:304:10:o;1254:3205::-;1344:12;;;;1380:9;;;;1421:11;;;;1465:10;;;1442:33;;;;;;;;;;;;;;;;;;;1311:7;;-1:-1:-1;;;;;1344:12:10;;1380:9;;;1421:11;1311:7;;1442:33;;1465:10;;1442:33;;;1465:10;1442:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1526:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1526:21:10;;;;;;;;;1558:34;;1442:33;;-1:-1:-1;1526:21:10;:15;;-1:-1:-1;1558:34:10;;-1:-1:-1;1442:33:10;;1580:11;;1558:34;;:::i;:::-;;;;-1:-1:-1;;1558:34:10;;;;;;;;;1548:45;;1558:34;1548:45;;;;1526:68;;;;;;;;;;-1:-1:-1;1526:68:10;;;;1522:174;;;-1:-1:-1;;;;;1617:15:10;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1617:21:10;;;;;;;;;1649:34;;1617:21;;:10;1649:34;;1666:3;;1671:11;;1649:34;;:::i;:::-;;;;;;;;;;;;;1639:45;;;;;;1617:68;;;;;;;;;;;;1610:75;;;;;;1254:3205;;;:::o;1522:174::-;1705:17;1742:4;1748:12;1756:3;1748:7;:12::i;:::-;1725:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1705:56;;578:28;570:37;;-1:-1:-1;;;;;1771:9:10;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1792:12;1831:17;1852:3;-1:-1:-1;;;;;1852:14:10;1867:4;1852:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1828:44:10;-1:-1:-1;1893:38:10;;-1:-1:-1;1828:44:10;1914:16;1919:11;1914:2;:16;:::i;:::-;1893:14;:38::i;:::-;1980:25;;;;;-1:-1:-1;;;;;178:55:51;;1980:25:10;;;160:74:51;1886:45:10;;-1:-1:-1;1953:22:10;;-1:-1:-1;1980:11:10;;;;133:18:51;;1980:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1980:25:10;;;;;;;;;;;;:::i;:::-;1952:53;;;2019:5;:12;2035:1;2019:17;2015:2068;;2052:12;578:28;570:37;;-1:-1:-1;;;;;2067:7:10;;2075:3;2080:5;2086:1;2080:8;;;;;;;;:::i;:::-;;;;;;;2067:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;2742:55:51;;;;2724:74;;2829:2;2814:18;;2807:34;2712:2;2697:18;;2550:297;2067:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:37;-1:-1:-1;2052:37:10;2103:106;;2150:44;2171:3;2184:5;2190:1;2184:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2150:44;;;-1:-1:-1;;;;;2742:55:51;;;2724:74;;2814:18;;;2807:34;2697:18;2150:44:10;;;;;;;2103:106;2234:4;2226;:12;2222:238;;2258:187;;-1:-1:-1;;;2258:187:10;;6175:2:51;2258:187:10;;;6157:21:51;6214:3;6194:18;;;6187:31;6254:34;6234:18;;;6227:62;6325:34;6305:18;;;6298:62;6397:34;6376:19;;;6369:63;6469:17;6448:19;;;6441:46;6504:19;;2258:187:10;5973:556:51;2258:187:10;2478:86;2488:3;2493:4;2526:3;2531:11;2509:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2499:45;;;;;;2554:5;2560:1;2554:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2478:86;;;-1:-1:-1;;;;;9314:55:51;;;9296:74;;-1:-1:-1;;;;;;9406:79:51;;;9386:18;;;9379:107;;;;9502:18;;;9495:34;9560:2;9545:18;;9538:34;9283:3;9268:19;2478:86:10;;;;;;;2657:5;2663:1;2657:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2578:15:10;;2649:17;2578:15;;;;;;;;;;-1:-1:-1;;;;;;2578:21:10;;;;;;;;;2610:34;;2657:8;;2578:21;;2610:34;;2627:3;;2632:11;;2610:34;;:::i;:::-;;;;-1:-1:-1;;2610:34:10;;;;;;;;;2600:45;;2610:34;2600:45;;;;2578:68;;;;;;;;;;;;-1:-1:-1;2578:68:10;;;:88;;;;-1:-1:-1;;;;;2680:15:10;;;;2751:4;2680:10;;;:15;;;;;-1:-1:-1;;;;;;2680:21:10;;;;;;;;;2712:34;;2751:4;;-1:-1:-1;2712:34:10;;2729:3;;2734:11;;2712:34;;:::i;:::-;;;;;;;-1:-1:-1;;2712:34:10;;;;;;2702:45;;2712:34;2702:45;;;;2680:68;;;;;;;;;;-1:-1:-1;2680:68:10;:75;;;;;;;;;;;;;-1:-1:-1;2015:2068:10;;;2791:1;2776:5;:12;:16;2772:1311;;;2813:9;2808:1152;2832:5;:12;2828:1;:16;2808:1152;;;2869:12;578:28;570:37;;-1:-1:-1;;;;;2884:7:10;;2892:3;2897:5;2903:1;2897:8;;;;;;;;:::i;:::-;;;;;;;2884:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;2742:55:51;;;;2724:74;;2829:2;2814:18;;2807:34;2712:2;2697:18;;2550:297;2884:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2869:37;-1:-1:-1;2869:37:10;2924:114;;2975:44;2996:3;3009:5;3015:1;3009:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2975:44;;;-1:-1:-1;;;;;2742:55:51;;;2724:74;;2814:18;;;2807:34;2697:18;2975:44:10;;;;;;;2924:114;578:28;570:37;;-1:-1:-1;;;;;3080:8:10;;3089:3;3094:5;3100:1;3094:8;;;;;;;;:::i;:::-;;;;;;;;;;;3080:43;;-1:-1:-1;;;;;;3080:43:10;;;;;;;-1:-1:-1;;;;;6754:55:51;;;3080:43:10;;;6736:74:51;6826:18;;;6819:34;3104:18:10;6869::51;;;6862:34;6709:18;;3080:43:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3141:12;3171:17;3246:3;-1:-1:-1;;;;;3246:14:10;3261:4;3246:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3228:38:10;;-1:-1:-1;3228:38:10;-1:-1:-1;3295:38:10;3228;3316:16;3321:11;3316:2;:16;:::i;3295:38::-;3288:45;;3374:7;:37;;;;;3393:18;3385:4;:26;3374:37;3370:529;;;3509:86;3519:3;3524:4;3557:3;3562:11;3540:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3530:45;;;;;;3585:5;3591:1;3585:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3509:86;;;-1:-1:-1;;;;;9314:55:51;;;9296:74;;-1:-1:-1;;;;;;9406:79:51;;;9386:18;;;9379:107;;;;9502:18;;;9495:34;9560:2;9545:18;;9538:34;9283:3;9268:19;3509:86:10;;;;;;;3696:5;3702:1;3696:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3617:15:10;;3688:17;3617:15;;;;;;;;;;-1:-1:-1;;;;;;3617:21:10;;;;;;;;;3649:34;;3696:8;;3617:21;;3649:34;;3666:3;;3671:11;;3649:34;;:::i;:::-;;;;;;;;;;;;;3639:45;;;;;;3617:68;;;;;;;;;;;:88;;;;3798:4;3727;:10;;:15;3738:3;-1:-1:-1;;;;;3727:15:10;-1:-1:-1;;;;;3727:15:10;;;;;;;;;;;;:21;3743:4;3727:21;;;;;;;;;;;;;;;;;:68;3776:3;3781:11;3759:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3749:45;;;;;;3727:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;578:28;570:37;;-1:-1:-1;;;;;3824:8:10;;3833:3;3838:5;3844:1;3838:8;;;;;;;;:::i;:::-;;;;;;;;;;;3824:29;;-1:-1:-1;;;;;;3824:29:10;;;;;;;-1:-1:-1;;;;;6754:55:51;;;3824:29:10;;;6736:74:51;6826:18;;;6819:34;6869:18;;;6862:34;;;6709:18;;3824:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:5;;;;;3370:529;578:28;570:37;;-1:-1:-1;;;;;3916:8:10;;3925:3;3930:5;3936:1;3930:8;;;;;;;;:::i;:::-;;;;;;;;;;;3916:29;;-1:-1:-1;;;;;;3916:29:10;;;;;;;-1:-1:-1;;;;;6754:55:51;;;3916:29:10;;;6736:74:51;6826:18;;;6819:34;6869:18;;;6862:34;;;6709:18;;3916:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2851:1109;;;2846:3;;;;;:::i;:::-;;;;2808:1152;;;;2772:1311;;;3990:82;;;-1:-1:-1;;;3990:82:10;;9785:2:51;3990:82:10;;;9767:21:51;9804:18;;;9797:30;;;;9863:34;9843:18;;;9836:62;9934:34;9914:18;;;9907:62;9986:19;;3990:82:10;9583:428:51;3990:82:10;-1:-1:-1;;;;;4114:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4114:21:10;;;;;;;;;4146:34;;4114:21;;:15;4146:34;;4163:3;;4168:11;;4146:34;;:::i;:::-;;;;-1:-1:-1;;4146:34:10;;;;;;;;;4136:45;;4146:34;4136:45;;;;4114:68;;;;;;;;;;-1:-1:-1;4114:68:10;;;;4093:162;;;;-1:-1:-1;;;4093:162:10;;10218:2:51;4093:162:10;;;10200:21:51;10257:2;10237:18;;;10230:30;10296:34;10276:18;;;10269:62;10367:17;10347:18;;;10340:45;10402:19;;4093:162:10;10016:411:51;4093:162:10;4273:12;;;4266:19;;;;;;4302:9;;;4295:16;;-1:-1:-1;;4295:16:10;;;4321:17;-1:-1:-1;4328:10:10;;4273:12;4321:17;:::i;:::-;4348:18;4355:11;;;4348:18;;;-1:-1:-1;;;;;4384:15:10;;;;;;;;;;;;-1:-1:-1;;;;;;4384:21:10;;;;;;;;;4416:34;;4384:21;;4348:18;4416:34;;4433:3;;4438:11;;4416:34;;:::i;:::-;;;;;;;;;;;;;4406:45;;;;;;4384:68;;;;;;;;;;;;4377:75;;;;;;;;;1254:3205;;;:::o;6940:393::-;6999:12;7023:19;7055:1;:8;7066:2;7055:13;;;;:::i;:::-;7045:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7045:24:10;;7023:46;;7084:9;7079:224;7103:1;:8;7099:1;:12;7079:224;;;7132:9;7144:1;7146;7144:4;;;;;;;;:::i;:::-;;;;;;;7132:16;;7277:1;7271;7267:2;7263:10;7259:2;7255:19;7247:6;7243:32;7236:43;7218:75;7113:3;;;;;:::i;:::-;;;;7079:224;;6630:304;6708:7;6727:11;6749;6774:2;6763:1;:8;:13;:29;;6784:1;:8;6763:29;;;6779:2;6763:29;6749:43;;6807:9;6802:106;6826:3;6822:1;:7;6802:106;;;6891:5;:1;6895;6891:5;:::i;:::-;6865:1;6867:10;6876:1;6867:6;:10;:::i;:::-;6865:13;;;;;;;;:::i;:::-;;;;;;;6857:40;;6850:47;;;;;6831:3;;;;:::i;:::-;;;;6802:106;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;769:184:51:-;839:6;892:2;880:9;871:7;867:23;863:32;860:52;;;908:1;905;898:12;860:52;-1:-1:-1;931:16:51;;769:184;-1:-1:-1;769:184:51:o;2188:::-;2240:77;2237:1;2230:88;2337:4;2334:1;2327:15;2361:4;2358:1;2351:15;2377:168;2450:9;;;2481;;2498:15;;;2492:22;;2478:37;2468:71;;2519:18;;:::i;2852:322::-;2893:3;2931:5;2925:12;2955:1;2965:128;2979:6;2976:1;2973:13;2965:128;;;3076:4;3061:13;;;3057:24;;3051:31;3038:11;;;3031:52;2994:12;2965:128;;;-1:-1:-1;3148:1:51;3112:16;;3137:13;;;-1:-1:-1;3112:16:51;;2852:322;-1:-1:-1;2852:322:51:o;3179:324::-;-1:-1:-1;;;;;;3368:6:51;3364:79;3359:3;3352:92;3334:3;3460:37;3494:1;3489:3;3485:11;3477:6;3460:37;:::i;:::-;3453:44;3179:324;-1:-1:-1;;;;3179:324:51:o;3508:189::-;3637:3;3662:29;3687:3;3679:6;3662:29;:::i;3702:277::-;3769:6;3822:2;3810:9;3801:7;3797:23;3793:32;3790:52;;;3838:1;3835;3828:12;3790:52;3870:9;3864:16;3923:5;3916:13;3909:21;3902:5;3899:32;3889:60;;3945:1;3942;3935:12;3889:60;3968:5;3702:277;-1:-1:-1;;;3702:277:51:o;4906:128::-;4973:9;;;4994:11;;;4991:37;;;5008:18;;:::i;5039:125::-;5104:9;;;5125:10;;;5122:36;;;5138:18;;:::i;5169:610::-;5415:13;;5358:3;;5389;;5468:4;5495:15;;;5358:3;5538:175;5552:6;5549:1;5546:13;5538:175;;;5615:13;;5601:28;;5651:14;;;;5688:15;;;;5574:1;5567:9;5538:175;;;-1:-1:-1;;5722:21:51;;;-1:-1:-1;5759:14:51;;;;;-1:-1:-1;;;5169:610:51:o;6907:184::-;6959:77;6956:1;6949:88;7056:4;7053:1;7046:15;7080:4;7077:1;7070:15;7096:184;7148:77;7145:1;7138:88;7245:4;7242:1;7235:15;7269:4;7266:1;7259:15;7285:195;7324:3;7355:66;7348:5;7345:77;7342:103;;7425:18;;:::i;:::-;-1:-1:-1;7472:1:51;7461:13;;7285:195::o;7485:958::-;7550:5;7603:3;7596:4;7588:6;7584:17;7580:27;7570:55;;7621:1;7618;7611:12;7570:55;7650:6;7644:13;7676:4;7699:18;7736:2;7732;7729:10;7726:36;;;7742:18;;:::i;:::-;7788:2;7785:1;7781:10;7820:2;7814:9;-1:-1:-1;;7874:2:51;7870;7866:11;7862:84;7854:6;7850:97;7997:6;7985:10;7982:22;7977:2;7965:10;7962:18;7959:46;7956:72;;;8008:18;;:::i;:::-;8044:2;8037:22;8094:18;;;8170:15;;;8166:24;;;8128:15;;;;-1:-1:-1;8202:15:51;;;8199:35;;;8230:1;8227;8220:12;8199:35;8266:2;8258:6;8254:15;8243:26;;8278:135;8294:6;8289:3;8286:15;8278:135;;;8360:10;;8348:23;;8391:12;;;;8311;;;;8278:135;;;8431:6;7485:958;-1:-1:-1;;;;;;;7485:958:51:o;8448:614::-;8577:6;8585;8638:2;8626:9;8617:7;8613:23;8609:32;8606:52;;;8654:1;8651;8644:12;8606:52;8687:9;8681:16;8716:18;8757:2;8749:6;8746:14;8743:34;;;8773:1;8770;8763:12;8743:34;8796:72;8860:7;8851:6;8840:9;8836:22;8796:72;:::i;:::-;8786:82;;8914:2;8903:9;8899:18;8893:25;8877:41;;8943:2;8933:8;8930:16;8927:36;;;8959:1;8956;8949:12;8927:36;;8982:74;9048:7;9037:8;9026:9;9022:24;8982:74;:::i;:::-;8972:84;;;8448:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "31777": [
        {
          "start": 726,
          "length": 32
        },
        {
          "start": 938,
          "length": 32
        },
        {
          "start": 1170,
          "length": 32
        },
        {
          "start": 1382,
          "length": 32
        },
        {
          "start": 1952,
          "length": 32
        },
        {
          "start": 2188,
          "length": 32
        },
        {
          "start": 3047,
          "length": 32
        },
        {
          "start": 3283,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEPLOYER()": "c1b8411a",
    "IS_TEST()": "fa7626d4",
    "USER()": "81e167cf",
    "failed()": "ba414fa6",
    "testCreateForwarder()": "2c926004",
    "testCreateForwarderERC20()": "d26829b5",
    "testFlush()": "5f8e357d",
    "testFlushERC20()": "c20fc967"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPLOYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreateForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreateForwarderERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFlush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFlushERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Traffic.t.sol\":\"TrafficTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2500},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xadc8d3373f498fe105ffd60c498d368a8eee4dc99422b665f02cecc3e9ebad18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f065d2a522dd3af6dd48caf1f8a4f51b62ea4bb49396e7c46b8af7cab54a9dda\",\"dweb:/ipfs/QmRBHtX7MMQ5DDzAP1nk2UnemaYM2k5jD3jBYn21VvWfB8\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x92dbd0c7912a565d3cb336f825cbf06abc85317be8033c35f23909cdddd7e40e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8962c4c91f3af9c4abf22f2f9d33b32eb3e83fb89d905b4a16a7dad9582bb1ec\",\"dweb:/ipfs/Qmadk4Zua4rSwirifyThEzCU3nc3fXroh2tYStuqEYhxTa\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e63fa9a8bc793ccbdc82e93f85a4d2d5b66fd3f42303a6f5fe54c5ff230eb81\",\"dweb:/ipfs/QmVMxEw74WgFPqTZjXbYBLbo6gbbjtTocnfBW54Ft6W6Tb\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/Forwarder.sol\":{\"keccak256\":\"0x879415c10b4a89522d3b51dfa97586d86e058761b556df9a5fb2211881391d1c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d2ce10e62a087775da46cc5f2e1f8c148652ee2ef24756b49538109f59c0c6de\",\"dweb:/ipfs/QmUrARAPBC3Jq55PAaM8PtG9rB8uJLkCxHoLbv5PSx1xc8\"]},\"src/IForwarder.sol\":{\"keccak256\":\"0x4c1a7feb87643c599e23de29ca7101b990ea8632bd2ae7294c1960b1e34ca09e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a872a2dc7c36b3609306a2c331187d22eed811cad0e01598bf96a7d57a998f5a\",\"dweb:/ipfs/QmfS31NaoraroShw41hXKXM28nrDDuAjH4oCRdP1GqtsDB\"]},\"src/Rule.sol\":{\"keccak256\":\"0x431c7a61832837e54f5cd153ff6f9b4fbda5963a9c2315ab3610a08892208e34\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4a7bc469e34d5d655604085bfa92ac2e614830ba59f80d13f10b9442e6a7a9b6\",\"dweb:/ipfs/QmYPeJeA6GuPwevTvQdYJToAgJDHQWMukP6yScZmga5HPU\"]},\"src/Traffic.sol\":{\"keccak256\":\"0x9e55b5bf2056e222a8d6d4a119f1ab0581cf80acbdb3535cc4b6c67565525a9a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fb88a2d7309834e7148cb0d5d6b9602609a82d6942d3ab790c6180e2d395a142\",\"dweb:/ipfs/QmT4PB4xGZRJ6y5QDUk2eupksWbvcfziCpVLoejzKfi9ze\"]},\"src/WhitelistedAddressRule.sol\":{\"keccak256\":\"0xbc7f51e937c737dc264468eca7b65aeb2576b0cfd42671c07d79e9dc9236c452\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b4050f36ae2e3803702557103117e2c7374d8fa5701a0704f70a417c6ab0fe6b\",\"dweb:/ipfs/Qmaxgr4aCiRKFuvpDiTwdff67BdgDYKw3iSd2iUETj8KeE\"]},\"test/Traffic.t.sol\":{\"keccak256\":\"0x74a5903ccdc1191ba840663cface9dc9d3fcf35ae78b0719eb59c59f01753435\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d1bb99e5843549cc9804e7439b2c5294b3b6ed62fbc0d94af321c62434dca55\",\"dweb:/ipfs/QmSiarcG4hojLS71LZcPwD3tFRT2w5GGx1kn3DHTBVgjFq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPLOYER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreateForwarder"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreateForwarderERC20"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFlush"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFlushERC20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2500
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Traffic.t.sol": "TrafficTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xadc8d3373f498fe105ffd60c498d368a8eee4dc99422b665f02cecc3e9ebad18",
        "urls": [
          "bzz-raw://f065d2a522dd3af6dd48caf1f8a4f51b62ea4bb49396e7c46b8af7cab54a9dda",
          "dweb:/ipfs/QmRBHtX7MMQ5DDzAP1nk2UnemaYM2k5jD3jBYn21VvWfB8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x92dbd0c7912a565d3cb336f825cbf06abc85317be8033c35f23909cdddd7e40e",
        "urls": [
          "bzz-raw://8962c4c91f3af9c4abf22f2f9d33b32eb3e83fb89d905b4a16a7dad9582bb1ec",
          "dweb:/ipfs/Qmadk4Zua4rSwirifyThEzCU3nc3fXroh2tYStuqEYhxTa"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820",
        "urls": [
          "bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb",
          "dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61",
        "urls": [
          "bzz-raw://8e63fa9a8bc793ccbdc82e93f85a4d2d5b66fd3f42303a6f5fe54c5ff230eb81",
          "dweb:/ipfs/QmVMxEw74WgFPqTZjXbYBLbo6gbbjtTocnfBW54Ft6W6Tb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Forwarder.sol": {
        "keccak256": "0x879415c10b4a89522d3b51dfa97586d86e058761b556df9a5fb2211881391d1c",
        "urls": [
          "bzz-raw://d2ce10e62a087775da46cc5f2e1f8c148652ee2ef24756b49538109f59c0c6de",
          "dweb:/ipfs/QmUrARAPBC3Jq55PAaM8PtG9rB8uJLkCxHoLbv5PSx1xc8"
        ],
        "license": "UNLICENSED"
      },
      "src/IForwarder.sol": {
        "keccak256": "0x4c1a7feb87643c599e23de29ca7101b990ea8632bd2ae7294c1960b1e34ca09e",
        "urls": [
          "bzz-raw://a872a2dc7c36b3609306a2c331187d22eed811cad0e01598bf96a7d57a998f5a",
          "dweb:/ipfs/QmfS31NaoraroShw41hXKXM28nrDDuAjH4oCRdP1GqtsDB"
        ],
        "license": "UNLICENSED"
      },
      "src/Rule.sol": {
        "keccak256": "0x431c7a61832837e54f5cd153ff6f9b4fbda5963a9c2315ab3610a08892208e34",
        "urls": [
          "bzz-raw://4a7bc469e34d5d655604085bfa92ac2e614830ba59f80d13f10b9442e6a7a9b6",
          "dweb:/ipfs/QmYPeJeA6GuPwevTvQdYJToAgJDHQWMukP6yScZmga5HPU"
        ],
        "license": "UNLICENSED"
      },
      "src/Traffic.sol": {
        "keccak256": "0x9e55b5bf2056e222a8d6d4a119f1ab0581cf80acbdb3535cc4b6c67565525a9a",
        "urls": [
          "bzz-raw://fb88a2d7309834e7148cb0d5d6b9602609a82d6942d3ab790c6180e2d395a142",
          "dweb:/ipfs/QmT4PB4xGZRJ6y5QDUk2eupksWbvcfziCpVLoejzKfi9ze"
        ],
        "license": "UNLICENSED"
      },
      "src/WhitelistedAddressRule.sol": {
        "keccak256": "0xbc7f51e937c737dc264468eca7b65aeb2576b0cfd42671c07d79e9dc9236c452",
        "urls": [
          "bzz-raw://b4050f36ae2e3803702557103117e2c7374d8fa5701a0704f70a417c6ab0fe6b",
          "dweb:/ipfs/Qmaxgr4aCiRKFuvpDiTwdff67BdgDYKw3iSd2iUETj8KeE"
        ],
        "license": "UNLICENSED"
      },
      "test/Traffic.t.sol": {
        "keccak256": "0x74a5903ccdc1191ba840663cface9dc9d3fcf35ae78b0719eb59c59f01753435",
        "urls": [
          "bzz-raw://3d1bb99e5843549cc9804e7439b2c5294b3b6ed62fbc0d94af321c62434dca55",
          "dweb:/ipfs/QmSiarcG4hojLS71LZcPwD3tFRT2w5GGx1kn3DHTBVgjFq"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Traffic.t.sol",
    "id": 32051,
    "exportedSymbols": {
      "Address": [
        28514
      ],
      "Clones": [
        24914
      ],
      "CommonBase": [
        1841
      ],
      "Context": [
        28536
      ],
      "Counters": [
        28610
      ],
      "Create2": [
        28691
      ],
      "DSTest": [
        1786
      ],
      "ERC1155": [
        26137
      ],
      "ERC165": [
        28890
      ],
      "ERC20": [
        26902
      ],
      "ERC721": [
        28023
      ],
      "Forwarder": [
        30640
      ],
      "IERC1155": [
        26259
      ],
      "IERC1155MetadataURI": [
        26315
      ],
      "IERC1155Receiver": [
        26300
      ],
      "IERC165": [
        28902
      ],
      "IERC20": [
        26980
      ],
      "IERC20Metadata": [
        27049
      ],
      "IERC721": [
        28139
      ],
      "IERC721Metadata": [
        28184
      ],
      "IERC721Receiver": [
        28157
      ],
      "IForwarder": [
        30684
      ],
      "Mate": [
        30480
      ],
      "Math": [
        29767
      ],
      "Rule": [
        30758
      ],
      "StdAssertions": [
        2704
      ],
      "StdChains": [
        3027
      ],
      "StdCheats": [
        4929
      ],
      "StdStorage": [
        5834
      ],
      "StdUtils": [
        7697
      ],
      "Strings": [
        28866
      ],
      "Test": [
        7731
      ],
      "TestBase": [
        7718
      ],
      "Traffic": [
        31552
      ],
      "TrafficTest": [
        32050
      ],
      "Vm": [
        8705
      ],
      "WhitelistedAddressRule": [
        31738
      ],
      "console": [
        16769
      ],
      "console2": [
        24834
      ],
      "stdError": [
        4995
      ],
      "stdJson": [
        5661
      ],
      "stdMath": [
        5803
      ],
      "stdStorage": [
        7268
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:3173:50",
    "nodes": [
      {
        "id": 31740,
        "nodeType": "PragmaDirective",
        "src": "40:32:50",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".17",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 31741,
        "nodeType": "ImportDirective",
        "src": "74:28:50",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 7732,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31742,
        "nodeType": "ImportDirective",
        "src": "104:72:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 26138,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31743,
        "nodeType": "ImportDirective",
        "src": "177:68:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 26903,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31744,
        "nodeType": "ImportDirective",
        "src": "246:70:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 28024,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31745,
        "nodeType": "ImportDirective",
        "src": "318:30:50",
        "nodes": [],
        "absolutePath": "src/Forwarder.sol",
        "file": "../src/Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 30641,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31746,
        "nodeType": "ImportDirective",
        "src": "349:28:50",
        "nodes": [],
        "absolutePath": "src/Traffic.sol",
        "file": "../src/Traffic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32051,
        "sourceUnit": 31553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32050,
        "nodeType": "ContractDefinition",
        "src": "379:2833:50",
        "nodes": [
          {
            "id": 31751,
            "nodeType": "VariableDeclaration",
            "src": "414:15:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "traffic",
            "nameLocation": "422:7:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Traffic_$31552",
              "typeString": "contract Traffic"
            },
            "typeName": {
              "id": 31750,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31749,
                "name": "Traffic",
                "nameLocations": [
                  "414:7:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31552,
                "src": "414:7:50"
              },
              "referencedDeclaration": 31552,
              "src": "414:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Traffic_$31552",
                "typeString": "contract Traffic"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31754,
            "nodeType": "VariableDeclaration",
            "src": "435:19:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "forwarder",
            "nameLocation": "445:9:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Forwarder_$30640",
              "typeString": "contract Forwarder"
            },
            "typeName": {
              "id": 31753,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31752,
                "name": "Forwarder",
                "nameLocations": [
                  "435:9:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30640,
                "src": "435:9:50"
              },
              "referencedDeclaration": 30640,
              "src": "435:9:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Forwarder_$30640",
                "typeString": "contract Forwarder"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31757,
            "nodeType": "VariableDeclaration",
            "src": "460:11:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "erc20",
            "nameLocation": "466:5:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$26902",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 31756,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31755,
                "name": "ERC20",
                "nameLocations": [
                  "460:5:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26902,
                "src": "460:5:50"
              },
              "referencedDeclaration": 26902,
              "src": "460:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$26902",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31760,
            "nodeType": "VariableDeclaration",
            "src": "478:77:50",
            "nodes": [],
            "constant": true,
            "functionSelector": "c1b8411a",
            "mutability": "constant",
            "name": "DEPLOYER",
            "nameLocation": "502:8:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31758,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832313732353330466235383838366233343636343237424436303233364536334646386534424535",
              "id": 31759,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "513:42:50",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2172530Fb58886b3466427BD60236E63FF8e4BE5"
            },
            "visibility": "public"
          },
          {
            "id": 31763,
            "nodeType": "VariableDeclaration",
            "src": "561:73:50",
            "nodes": [],
            "constant": true,
            "functionSelector": "81e167cf",
            "mutability": "constant",
            "name": "USER",
            "nameLocation": "585:4:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "561:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839343735303338316245314162413035303443363636656531444231313846363866303738304434",
              "id": 31762,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "592:42:50",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x94750381bE1AbA0504C666ee1DB118F68f0780D4"
            },
            "visibility": "public"
          },
          {
            "id": 31766,
            "nodeType": "VariableDeclaration",
            "src": "641:27:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "salt",
            "nameLocation": "658:4:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes20",
              "typeString": "bytes20"
            },
            "typeName": {
              "id": 31764,
              "name": "bytes20",
              "nodeType": "ElementaryTypeName",
              "src": "641:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes20",
                "typeString": "bytes20"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 31765,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "665:3:50",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1",
                "typeString": "literal_string \"5\""
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "id": 31769,
            "nodeType": "VariableDeclaration",
            "src": "674:32:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ownershipId",
            "nameLocation": "691:11:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31767,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 31768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "705:1:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 31772,
            "nodeType": "VariableDeclaration",
            "src": "712:30:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "toFlush",
            "nameLocation": "729:7:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "343230",
              "id": 31771,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "739:3:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_420_by_1",
                "typeString": "int_const 420"
              },
              "value": "420"
            },
            "visibility": "internal"
          },
          {
            "id": 31775,
            "nodeType": "VariableDeclaration",
            "src": "748:37:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "tokenIdToFlush",
            "nameLocation": "765:14:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "343230",
              "id": 31774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "782:3:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_420_by_1",
                "typeString": "int_const 420"
              },
              "value": "420"
            },
            "visibility": "internal"
          },
          {
            "id": 31777,
            "nodeType": "VariableDeclaration",
            "src": "791:34:50",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "forwarderAddress",
            "nameLocation": "809:16:50",
            "scope": 32050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31776,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31835,
            "nodeType": "FunctionDefinition",
            "src": "832:387:50",
            "nodes": [],
            "body": {
              "id": 31834,
              "nodeType": "Block",
              "src": "846:373:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31783,
                        "name": "DEPLOYER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31760,
                        "src": "870:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31780,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "856:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "859:10:50",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8433,
                      "src": "856:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:23:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31785,
                  "nodeType": "ExpressionStatement",
                  "src": "856:23:50"
                },
                {
                  "assignments": [
                    31787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31787,
                      "mutability": "mutable",
                      "name": "trafficAddress",
                      "nameLocation": "898:14:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 31834,
                      "src": "890:22:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 31786,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "890:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31789,
                        "name": "DEPLOYER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31760,
                        "src": "936:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 31790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 31788,
                      "name": "computeCreateAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7616,
                      "src": "915:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) pure returns (address)"
                      }
                    },
                    "id": 31791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:33:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "890:58:50"
                },
                {
                  "expression": {
                    "id": 31799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31793,
                      "name": "forwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31754,
                      "src": "958:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Forwarder_$30640",
                        "typeString": "contract Forwarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31797,
                          "name": "trafficAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31787,
                          "src": "984:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "970:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Forwarder_$30640_$",
                          "typeString": "function (address) returns (contract Forwarder)"
                        },
                        "typeName": {
                          "id": 31795,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31794,
                            "name": "Forwarder",
                            "nameLocations": [
                              "974:9:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30640,
                            "src": "974:9:50"
                          },
                          "referencedDeclaration": 30640,
                          "src": "974:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Forwarder_$30640",
                            "typeString": "contract Forwarder"
                          }
                        }
                      },
                      "id": 31798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:29:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Forwarder_$30640",
                        "typeString": "contract Forwarder"
                      }
                    },
                    "src": "958:41:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Forwarder_$30640",
                      "typeString": "contract Forwarder"
                    }
                  },
                  "id": 31800,
                  "nodeType": "ExpressionStatement",
                  "src": "958:41:50"
                },
                {
                  "expression": {
                    "id": 31810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31801,
                      "name": "traffic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31751,
                      "src": "1009:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Traffic_$31552",
                        "typeString": "contract Traffic"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 31807,
                              "name": "forwarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31754,
                              "src": "1052:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Forwarder_$30640",
                                "typeString": "contract Forwarder"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Forwarder_$30640",
                                "typeString": "contract Forwarder"
                              }
                            ],
                            "id": 31806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1044:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31805,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1044:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1044:18:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1019:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Traffic_$31552_$",
                          "typeString": "function (address) returns (contract Traffic)"
                        },
                        "typeName": {
                          "id": 31803,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31802,
                            "name": "Traffic",
                            "nameLocations": [
                              "1023:7:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31552,
                            "src": "1023:7:50"
                          },
                          "referencedDeclaration": 31552,
                          "src": "1023:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Traffic_$31552",
                            "typeString": "contract Traffic"
                          }
                        }
                      },
                      "id": 31809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1019:53:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Traffic_$31552",
                        "typeString": "contract Traffic"
                      }
                    },
                    "src": "1009:63:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Traffic_$31552",
                      "typeString": "contract Traffic"
                    }
                  },
                  "id": 31811,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:63:50"
                },
                {
                  "expression": {
                    "id": 31818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31812,
                      "name": "forwarderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31777,
                      "src": "1082:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31815,
                          "name": "ownershipId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31769,
                          "src": "1133:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31816,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31766,
                          "src": "1146:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        ],
                        "expression": {
                          "id": 31813,
                          "name": "traffic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31751,
                          "src": "1101:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Traffic_$31552",
                            "typeString": "contract Traffic"
                          }
                        },
                        "id": 31814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1109:23:50",
                        "memberName": "computeForwarderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31017,
                        "src": "1101:31:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (uint256,bytes32) view external returns (address)"
                        }
                      },
                      "id": 31817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1101:50:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1082:69:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31819,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:69:50"
                },
                {
                  "expression": {
                    "id": 31827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31820,
                      "name": "erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31757,
                      "src": "1162:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$26902",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 31824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1180:2:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "hexValue": "",
                          "id": 31825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1184:2:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 31823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1170:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$26902_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 31822,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31821,
                            "name": "ERC20",
                            "nameLocations": [
                              "1174:5:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26902,
                            "src": "1174:5:50"
                          },
                          "referencedDeclaration": 26902,
                          "src": "1174:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$26902",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 31826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1170:17:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$26902",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1162:25:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$26902",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 31828,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:25:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31829,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1198:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1201:9:50",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8450,
                      "src": "1198:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:14:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31833,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:14:50"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:2:50"
            },
            "returnParameters": {
              "id": 31779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:0:50"
            },
            "scope": 32050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31902,
            "nodeType": "FunctionDefinition",
            "src": "1238:535:50",
            "nodes": [],
            "body": {
              "id": 31901,
              "nodeType": "Block",
              "src": "1281:492:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31841,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "1305:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31838,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1291:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1294:10:50",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8433,
                      "src": "1291:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:19:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31843,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31847,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "1334:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1348:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1340:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1340:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1340:10:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31844,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "1321:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 31846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1329:4:50",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30963,
                      "src": "1321:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 31852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1321:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31853,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:30:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31854,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1362:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1365:9:50",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8450,
                      "src": "1362:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:14:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31858,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:14:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31862,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31757,
                            "src": "1461:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1453:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31860,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1453:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:14:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31864,
                        "name": "forwarderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31777,
                        "src": "1473:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31865,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "1497:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31859,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4770,
                        4787,
                        4890
                      ],
                      "referencedDeclaration": 4787,
                      "src": "1440:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 31866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1446:5:50",
                      "1469:2:50",
                      "1491:4:50"
                    ],
                    "names": [
                      "token",
                      "to",
                      "give"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1440:66:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31867,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:66:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31871,
                        "name": "ownershipId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31769,
                        "src": "1546:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31872,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31766,
                        "src": "1559:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31875,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31757,
                            "src": "1573:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1565:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1565:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1565:14:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31877,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "1581:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31878,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "1590:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31868,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "1517:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 31870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1525:20:50",
                      "memberName": "createForwarderERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31431,
                      "src": "1517:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,address,uint256,address) external"
                      }
                    },
                    "id": 31879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:78:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31880,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:78:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31884,
                              "name": "forwarderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31777,
                              "src": "1630:16:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 31882,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31757,
                              "src": "1614:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$26902",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 31883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1620:9:50",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26414,
                            "src": "1614:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 31885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1614:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1651:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1614:38:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f727761726465722073686f756c646e2774206861766520746f6b656e73",
                        "id": 31888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1654:33:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        },
                        "value": "Forwarder shouldn't have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        }
                      ],
                      "id": 31881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1606:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:82:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31890,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:82:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31894,
                              "name": "USER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31763,
                              "src": "1722:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 31892,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31757,
                              "src": "1706:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$26902",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 31893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1712:9:50",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26414,
                            "src": "1706:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 31895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1706:21:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 31896,
                          "name": "toFlush",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31772,
                          "src": "1731:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1706:32:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722073686f756c64206861766520746f6b656e73",
                        "id": 31898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        },
                        "value": "User should have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        }
                      ],
                      "id": 31891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1698:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:68:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31900,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:68:50"
                }
              ]
            },
            "functionSelector": "d26829b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreateForwarderERC20",
            "nameLocation": "1247:24:50",
            "parameters": {
              "id": 31836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:2:50"
            },
            "returnParameters": {
              "id": 31837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:50"
            },
            "scope": 32050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31953,
            "nodeType": "FunctionDefinition",
            "src": "1779:503:50",
            "nodes": [],
            "body": {
              "id": 31952,
              "nodeType": "Block",
              "src": "1812:470:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31905,
                      "name": "testCreateForwarderERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31902,
                      "src": "1865:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31907,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:26:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31911,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31757,
                            "src": "1976:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1968:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31909,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1968:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1968:14:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31913,
                        "name": "forwarderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31777,
                        "src": "1988:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31914,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "2012:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31908,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4770,
                        4787,
                        4890
                      ],
                      "referencedDeclaration": 4787,
                      "src": "1955:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 31915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1961:5:50",
                      "1984:2:50",
                      "2006:4:50"
                    ],
                    "names": [
                      "token",
                      "to",
                      "give"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1955:66:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31916,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:66:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31920,
                        "name": "ownershipId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31769,
                        "src": "2051:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31921,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31766,
                        "src": "2064:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31924,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31757,
                            "src": "2078:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26902",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2070:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2070:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2070:14:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31926,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "2086:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31927,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "2095:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31917,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "2032:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 31919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2040:10:50",
                      "memberName": "flushERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31402,
                      "src": "2032:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,address,uint256,address) external"
                      }
                    },
                    "id": 31928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2032:68:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31929,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:68:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31933,
                              "name": "forwarderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31777,
                              "src": "2135:16:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 31931,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31757,
                              "src": "2119:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$26902",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 31932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2125:9:50",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26414,
                            "src": "2119:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 31934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2119:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2156:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2119:38:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f727761726465722073686f756c646e2774206861766520746f6b656e73",
                        "id": 31937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2159:33:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        },
                        "value": "Forwarder shouldn't have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        }
                      ],
                      "id": 31930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2111:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2111:82:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31939,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:82:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31943,
                              "name": "USER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31763,
                              "src": "2227:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 31941,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31757,
                              "src": "2211:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$26902",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 31942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2217:9:50",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26414,
                            "src": "2211:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 31944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2211:21:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31945,
                            "name": "toFlush",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31772,
                            "src": "2236:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 31946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2246:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2236:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2211:36:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722073686f756c64206861766520746f6b656e73",
                        "id": 31949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2249:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        },
                        "value": "User should have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        }
                      ],
                      "id": 31940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2203:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:72:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31951,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:72:50"
                }
              ]
            },
            "functionSelector": "c20fc967",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFlushERC20",
            "nameLocation": "1788:14:50",
            "parameters": {
              "id": 31903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1802:2:50"
            },
            "returnParameters": {
              "id": 31904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1812:0:50"
            },
            "scope": 32050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32008,
            "nodeType": "FunctionDefinition",
            "src": "2301:468:50",
            "nodes": [],
            "body": {
              "id": 32007,
              "nodeType": "Block",
              "src": "2339:430:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31959,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "2363:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31956,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "2349:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2352:10:50",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8433,
                      "src": "2349:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:19:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31961,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31965,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "2392:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2406:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2398:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2398:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2398:10:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31962,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "2379:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 31964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2387:4:50",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30963,
                      "src": "2379:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 31970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31971,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:30:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31972,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "2420:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8705",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2423:9:50",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8450,
                      "src": "2420:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:14:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31976,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:14:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31978,
                        "name": "forwarderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31777,
                        "src": "2508:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31979,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "2532:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31977,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4770,
                        4787,
                        4890
                      ],
                      "referencedDeclaration": 4770,
                      "src": "2498:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2504:2:50",
                      "2526:4:50"
                    ],
                    "names": [
                      "to",
                      "give"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2498:43:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31981,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31985,
                        "name": "ownershipId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31769,
                        "src": "2576:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31986,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31766,
                        "src": "2589:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      {
                        "id": 31987,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "2595:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31988,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "2604:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31982,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "2552:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 31984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2560:15:50",
                      "memberName": "createForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31551,
                      "src": "2552:23:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint256,address) external"
                      }
                    },
                    "id": 31989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:57:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31990,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:57:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31992,
                            "name": "forwarderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31777,
                            "src": "2628:16:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 31993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2645:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2628:24:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2656:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2628:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f727761726465722073686f756c646e2774206861766520746f6b656e73",
                        "id": 31996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2659:33:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        },
                        "value": "Forwarder shouldn't have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        }
                      ],
                      "id": 31991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2620:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2620:73:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31998,
                  "nodeType": "ExpressionStatement",
                  "src": "2620:73:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32000,
                            "name": "USER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31763,
                            "src": "2711:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2716:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2711:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32002,
                          "name": "toFlush",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31772,
                          "src": "2727:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2711:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722073686f756c64206861766520746f6b656e73",
                        "id": 32004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2736:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        },
                        "value": "User should have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        }
                      ],
                      "id": 31999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2703:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:59:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32006,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:59:50"
                }
              ]
            },
            "functionSelector": "2c926004",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreateForwarder",
            "nameLocation": "2310:19:50",
            "parameters": {
              "id": 31954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:50"
            },
            "returnParameters": {
              "id": 31955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2339:0:50"
            },
            "scope": 32050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32049,
            "nodeType": "FunctionDefinition",
            "src": "2775:435:50",
            "nodes": [],
            "body": {
              "id": 32048,
              "nodeType": "Block",
              "src": "2803:407:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 32011,
                      "name": "testCreateForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32008,
                      "src": "2856:19:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 32012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:21:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32013,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32015,
                        "name": "forwarderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31777,
                        "src": "2951:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32016,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "2975:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32014,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4770,
                        4787,
                        4890
                      ],
                      "referencedDeclaration": 4770,
                      "src": "2941:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2947:2:50",
                      "2969:4:50"
                    ],
                    "names": [
                      "to",
                      "give"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2941:43:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32018,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32022,
                        "name": "ownershipId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31769,
                        "src": "3009:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32023,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31766,
                        "src": "3022:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      {
                        "id": 32024,
                        "name": "toFlush",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31772,
                        "src": "3028:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32025,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31763,
                        "src": "3037:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32019,
                        "name": "traffic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31751,
                        "src": "2995:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Traffic_$31552",
                          "typeString": "contract Traffic"
                        }
                      },
                      "id": 32021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3003:5:50",
                      "memberName": "flush",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31527,
                      "src": "2995:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint256,address) external"
                      }
                    },
                    "id": 32026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:47:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32027,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:47:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "components": [
                              {
                                "id": 32029,
                                "name": "forwarderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31777,
                                "src": "3062:16:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 32030,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3061:18:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3080:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3061:26:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3091:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3061:31:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f727761726465722073686f756c646e2774206861766520746f6b656e73",
                        "id": 32034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3094:33:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        },
                        "value": "Forwarder shouldn't have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc9b701f96b6d2f54f37b2c89f29fa80ab563119bbe99f4943e878d10c168e7a",
                          "typeString": "literal_string \"Forwarder shouldn't have tokens\""
                        }
                      ],
                      "id": 32028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3053:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:75:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32036,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:75:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "components": [
                              {
                                "id": 32038,
                                "name": "USER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31763,
                                "src": "3147:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 32039,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3146:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 32040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3153:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3146:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 32043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 32041,
                            "name": "toFlush",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31772,
                            "src": "3164:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 32042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3174:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3164:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3146:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722073686f756c64206861766520746f6b656e73",
                        "id": 32045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3177:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        },
                        "value": "User should have tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa7744ef7fd450fa5f551ecd055309da7e95d714bab29cf30d75e23752baccc4",
                          "typeString": "literal_string \"User should have tokens\""
                        }
                      ],
                      "id": 32037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3138:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3138:65:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32047,
                  "nodeType": "ExpressionStatement",
                  "src": "3138:65:50"
                }
              ]
            },
            "functionSelector": "5f8e357d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFlush",
            "nameLocation": "2784:9:50",
            "parameters": {
              "id": 32009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:2:50"
            },
            "returnParameters": {
              "id": 32010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2803:0:50"
            },
            "scope": 32050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31747,
              "name": "Test",
              "nameLocations": [
                "403:4:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7731,
              "src": "403:4:50"
            },
            "id": 31748,
            "nodeType": "InheritanceSpecifier",
            "src": "403:4:50"
          }
        ],
        "canonicalName": "TrafficTest",
        "contractDependencies": [
          26902,
          30640,
          31552
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32050,
          7731,
          7718,
          1841,
          7697,
          4929,
          4502,
          3027,
          2704,
          1786
        ],
        "name": "TrafficTest",
        "nameLocation": "388:11:50",
        "scope": 32051,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 50
}